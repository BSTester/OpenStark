INSERT INTO `t_projects` VALUES (327, 'knowledge.book', '6f1b612e-de63-11e8-8585-0242ac120002', 186, '{\"title\": \"自动化测试结果上报接口\", \"blog\": \"**接口地址:** http://172.20.20.160:8090/api/py/test/token/test/log\\n\\n**请求方式:** POST\\n\\n**请求参数(JSON格式):**\\n\\n|参数|  说明|\\n|-|-|\\n|job_id | 任务编号, 必填, 根据测试类型到测试平台http://172.20.20.160:8090, 对应自动化测试类型菜单下的“任务管理”中新建任务获取|\\n|case_id |用例编号, 必填, 测试用例唯一标识, 自定义, 不可重复|\\n|case_title|  用例标题, 必填|\\n|test_description   | 测试描述, 选填|\\n|executor  |  执行者, 选填, 建议填写|\\n|test_type  | 测试类型, 必填, 仅可选: gui、api, gui: GUI测试, api: 纯接口测试|\\n|token  | 接口鉴权token, 必填, 可到测试平台个人中心 http://172.20.20.160:8090/account/settings/base 获取|\\n|test_result |测试结果, 必填, 仅可选填: pass、fail、error|\\n|actual | 实际结果, 必填, 可填写断言结果|\\n|test_start_time  |测试开始时间, 必填, 精确到毫秒, 格式为: %Y-%m-%d %H:%M:%S.%f, 如: 2018-08-15 17:23:24.308|\\n|test_end_time |  测试结束时间, 必填, 精确到毫秒, 格式为: %Y-%m-%d %H:%M:%S.%f, 如: 2018-08-15 17:23:24.308|\\n|test_details |   接口测试请求接口明细, 接口测试必填, 格式为json数组,详细参数见下表|\\n\\n**test_details参数列表:**\\n\\n|参数 | 说明|\\n|-|-|\\n|title |  接口标题, 必填|\\n|url| 接口地址, 必填|\\n|method | 请求方式, 必填|\\n|status|  响应状态, 必填|\\n|request_headers| 请求头, 必填|\\n|request_body  |  请求体, 必填|\\n|response_headers  |  响应头, 必填|\\n|response_body  | 响应体, 必填|\\n|start_time  |接口请求开始时间, 必填, 精确到毫秒, 格式为: %Y-%m-%d %H:%M:%S.%f, 如: 2018-08-15 17:23:24.308|\\n|end_time |  接口响应结束时间, 必填, 精确到毫秒, 格式为: %Y-%m-%d %H:%M:%S.%f, 如: 2018-08-15 17:23:24.308|\\n|description| 接口描述, 选填, 可填写测试日志|\\n\\n**请求参数举例:**\\n\\n    {\\\"job_id\\\": \\\"303b3868-bb11-11e8-b383-f44d3016f44c\\\", \\\"executor\\\": \\\"彭鹏\\\", \\\"case_title\\\": \\\"账户安全-修改登录密码 (test_U0012)\\\", \\\"test_description\\\": \\\"\\\", \\\"case_id\\\": \\\"U0012\\\", \\\"token\\\": \\\"634756755A33426C6************45459324C6D4E7662513D3D\\\", \\\"test_type\\\": \\\"api\\\", \\\"test_start_time\\\": \\\"2018-08-15 17:23:24.308\\\", \\\"test_end_time\\\": \\\"2018-08-15 17:24:07.333\\\", \\\"test_details\\\": [{\\\"title\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"method\\\": \\\"\\\", \\\"status\\\": \\\"\\\", \\\"request_headers\\\": \\\"\\\", \\\"request_body\\\": \\\"\\\", \\\"response_headers\\\": \\\"\\\", \\\"response_body\\\": \\\"\\\", \\\"description\\\": \\\"\\\", \\\"start_time\\\": \\\"2018-08-15 17:23:24.308\\\", \\\"end_time\\\": \\\"2018-08-15 17:24:07.333\\\"}], \\\"test_result\\\": \\\"pass\\\", \\\"actual\\\": \\\"实际与预期一致\\\"}\\n\\n**响应返回举例:**\\n\\n    {\\\"status\\\": \\\"SUCCESS\\\", \\\"message\\\": \\\"上报测试记录成功!\\\", \\\"data\\\": \\\"/static/files/apiTest/logs/b9a7a892-b658-11e8-876b-f44d3016f44c_2018-09-14.jsons?v=16adde3d79726b93ba4c953477e6a802\\\"}\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-06 11:41:10\", \"author\": \"彭鹏\"}', 1, '2018-11-2 13:52:08');
INSERT INTO `t_projects` VALUES (328, 'knowledge.book', '93eee05c-de63-11e8-8585-0242ac120002', 186, '{\"title\": \"自动化测试用例拉取接口\", \"blog\": \"**接口地址:** http://172.20.20.160:8090/api/py/test/token/testCase/list\\n\\n**请求方式:** POST\\n\\n**请求参数(JSON格式):**\\n\\n|参数|  说明|\\n|-|-|\\n|project_id | 项目编号, 必填, 在“控制台-项目管理”中获取|\\n|test_type  | 测试类型, 必填, 仅可选: gui、api, gui: GUI测试, api: 纯接口测试|\\n|token  | 接口鉴权token, 必填, 可到测试平台个人中心 http://172.20.20.160:8090/account/settings/base 获取|\\n\\n**返回参数(JSON格式):**\\n\\n|参数 | 说明|\\n|-|-|\\n|case_id |  用例编号|\\n|title| 用例标题|\\n|team | 所属组|\\n|project|  所属项目|\\n|description| 用例描述|\\n|expected  | 预期结果|\\n|function | 执行函数|\\n|status  |  状态|\\n|author  |  作者|\\n|executor  |执行者|\\n|module| 系统模块|\\n|details| 接口列表, JSON数组, test_type为api时返回|\\n\\n**请求参数举例**\\n\\n    {\\\"project_id\\\": \\\"128\\\", \\\"token\\\": \\\"634756755A33426C6************45459324C6D4E7662513D3D\\\", \\\"test_type\\\": \\\"api\\\"}\\n\\n**响应返回举例**\\n\\n    {\'status\': \'SUCCESS\', \'message\': \'获取用例成功!\', \'data\':[{\'case_id\': \'U0033\', \'team\': \'渠道营销组\', \'project\': \'用户系统\', \'title\': \'成长任务-推荐任务 (test_U0033)\', \'description\': \'操作步骤:\\\\n1、推荐好友\', \'status\': \'已实现\', \'author\': \'彭鹏\', \'details\': [{\'title\': \'测试接口1\', \'url\': \'http://www.baidu.com\', \'method\': \'POST\', \'request_headers\': \'\', \'request_body\': \'\', \'description\': \'\'}, {\'title\': \'测试接口2\', \'url\': \'http://www.baidu.com.cn\', \'method\': \'GET\', \'request_headers\': \'\', \'request_body\': \'\', \'description\': \'\'}], \'expected\': \'1、成长值增加20，按钮改为“已完成”\', \'executor\': \'彭鹏\', \'function\': \'TestCase.UserSystem.test_user_gui.UserGUI.test_U0033\', \'module\': \'会员中心\'}]}\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-06 11:41:31\", \"author\": \"彭鹏\"}', 1, '2018-11-2 13:53:09');
INSERT INTO `t_projects` VALUES (329, 'knowledge.book', 'afec6d6a-de63-11e8-8585-0242ac120002', 186, '{\"title\": \"自动化测试用例编辑/新增接口\", \"blog\": \"**接口地址:** http://172.20.20.160:8090/api/py/test/token/testCase/update\\n\\n**请求方式:** POST\\n\\n**请求参数(JSON格式):**\\n\\n|参数|  说明|\\n|-|-|\\n|project_id | 项目编号, 必填, 在“控制台-项目管理”中获取|\\n|case_id |用例编号, 必填, 测试用例唯一标识, 自定义, 不可重复|\\n|title|  用例标题, 必填|\\n|description   | 用例描述, 选填|\\n|expected |  预期结果, 必填|\\n|author |作者, 选填, 建议填写|\\n|executor  |  执行者, 选填, 建议填写|\\n|function  |执行函数, 选填, 建议填写, 否则无法远程执行|\\n|module  |系统模块, 选填, 建议填写|\\n|status |   状态, 必填, 仅可选: 已实现、开发中、已废弃|\\n|details| 接口列表, JSON数组, test_type为api时必填, 详细参数见下表|\\n|test_type  | 测试类型, 必填, 仅可选: gui、api, gui: GUI测试, api: 纯接口测试|\\n|token  | 接口鉴权token, 必填, 可到测试平台个人中心 http://172.20.20.160:8090/account/settings/base 获取|\\n\\n**details参数列表:**\\n\\n|参数 | 说明|\\n|-|-|\\n|title |  接口标题, 必填|\\n|url| 接口地址, 必填|\\n|method | 请求方式, 必填|\\n|request_headers| 请求头, 必填|\\n|request_body  |  请求体, 必填|\\n|description| 接口描述, 选填|\\n\\n**请求参数举例:**\\n\\n    {\\\"project_id\\\": \\\"128\\\", \\\"case_id\\\": \\\"U0014\\\", \\\"token\\\": \\\"634756755A33426C626***************59324C6D4E7662513D3D\\\", \\\"function\\\": \\\"TestCase.UserSystem.test_user_gui.UserGUI.test_U0014\\\", \\\"details\\\": [{\\\"title\\\": \\\"测试接口1\\\", \\\"url\\\": \\\"http://www.baidu.com\\\", \\\"method\\\": \\\"POST\\\", \\\"request_headers\\\": \\\"\\\", \\\"request_body\\\": \\\"\\\", \\\"description\\\": \\\"\\\"}, {\\\"title\\\": \\\"测试接口2\\\", \\\"url\\\": \\\"http://www.baidu.com.cn\\\", \\\"method\\\": \\\"GET\\\", \\\"request_headers\\\": \\\"\\\", \\\"request_body\\\": \\\"\\\", \\\"description\\\": \\\"\\\"}], \\\"title\\\": \\\"账户安全-修改邮箱 (test_U0014)\\\", \\\"author\\\": \\\"彭鹏\\\", \\\"executor\\\": \\\"彭鹏\\\", \\\"test_type\\\": \\\"api\\\", \\\"module\\\": \\\"会员中心\\\", \\\"description\\\": \\\"操作步骤:\\\\n1、已登录系统，点击我的账户-账户安全\\\\n2、认证邮箱列点击\'修改\'\\\\n3、输入交易密码，点击【获取验证码】，输入6位验证码，点击【下一步】\\\\n4、输入新的邮箱，点击【下一步】\\\\n5、用新的邮箱地址登录系统\\\", \\\"expected\\\": \\\"1、进入账户安全页面，各信息显示正确\\\\n2、进入邮箱修改-验证身份页面\\\\n3、进入邮箱修改页面\\\\n4、修改成功\\\\n5、登录成功\\\", \\\"status\\\": \\\"已实现\\\"}\\n\\n**响应返回举例:**\\n\\n    {\\\"status\\\": \\\"SUCCESS\\\", \\\"message\\\": \\\"新增用例成功!\\\", \\\"data\\\": \\\"\\\"}\\n\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-06 11:41:49\", \"author\": \"彭鹏\"}', 1, '2018-11-2 13:53:56');
INSERT INTO `t_projects` VALUES (330, 'knowledge.book', '5b65ff0e-de77-11e8-8585-0242ac120002', 187, '{\"title\": \"使用说明\", \"blog\": \"# 1. 环境说明\\n* （推荐）正式版本\\n>http://172.20.20.160:8090/datamart/\\n* 历史版本\\n>http://172.20.20.160:9999/admin/plugin\\n# 2. 操作指引\\n* 第1步：在测试环境分段，确认或选择测试环境。\\n* 第2步：在业务选项分段，根据需要设置业务选项\\n* 第3步：在笑脸分段，选择需要的功能按钮，启动。\\n* 第4步：观察动态的执行提示，坐待水开。\\n* 第5步：高兴拿着数据结果离开，或者通过微信、KK给工具小哥吐槽一下！\\n# 3. 功能说明\\n1.  **随机用户信息**\\n* 支持随机生成3个用户信息（默认）\\n* 支持快捷刷新1个、2个、3个、5个、10个用户信息\\n* 支持丰富的用户信息（姓名、姓名读音、手机号码、移动运营商、身份证号码、性别、年龄、出生日期、籍贯、银行分行、银行卡号、电子邮箱）\\n2.  **生成用户数据**\\n*  支持测试环境按代号、按IP双入口选择\\n*  支持丰富的参数设置\\n*  支持数据生成过程的**关键步骤**动态状态显示\\n*  支持数据生成过程的**接口调用**状态显示\\n*  支持构造结果成功数据的格式化显示\\n*  支持接口的**请求响应详细日志**查看，便于定位分析\\n*  支持多数据生成过程的分步骤动态展示\\n3. ** 录入资产**\\n*  支持测试环境按代号、按IP双入口选择\\n*  支持丰富的参数设置\\n*  支持数据生成过程的**关键步骤**动态状态显示\\n*  支持数据生成过程的**接口调用**状态显示\\n*  支持构造结果成功数据的格式化显示\\n*  支持接口的**请求响应详细日志**查看，便于定位分析\\n*  支持多数据生成过程的分步骤动态展示\\n4.  **发布散标**\\n*  支持测试环境按代号、按IP双入口选择\\n*  支持丰富的参数设置\\n*  支持数据生成过程的**关键步骤**动态状态显示\\n*  支持数据生成过程的**接口调用**状态显示\\n*  支持构造结果成功数据的格式化显示\\n*  支持接口的**请求响应详细日志**查看，便于定位分析\\n*  支持多数据生成过程的分步骤动态展示\\n5. **环境开关**\\n* 支持多环境开关的统一操作控制界面\\n* （暂未支持）环境开关的状态检测\\n\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-11 11:30:10\", \"author\": \"窦献策\"}', 1, '2018-11-2 16:14:45');
INSERT INTO `t_projects` VALUES (331, 'knowledge.book', '3283ef06-de7c-11e8-8585-0242ac120002', 187, '{\"title\": \"界面截图\", \"blog\": \"###  随机用户信息\\n![file](/static/media/files/47/304352e4-e0a8-11e8-a274-0242ac120002.png?v=7269f29adc49cff3f2a4e633f65a4d49)\\n### 生成用户数据\\n![file](/static/media/files/47/1c529efc-e0a8-11e8-a274-0242ac120002.png?v=194adb838d9155f146075acc9e50af43)\\n![file](/static/media/files/47/1f8e2d02-e0a8-11e8-a274-0242ac120002.png?v=7bb6627040586274271f2939fef1f87f)\\n### 录入资产\\n![file](/static/media/files/47/343bd218-e0a8-11e8-a274-0242ac120002.png?v=7d46163295d3c3d299e77ba06ae09ae3)\\n### 发散标产品\\n![file](/static/media/files/47/36ac6f62-e0a8-11e8-a274-0242ac120002.png?v=7f52569cf8c13d1b135a080d926344ff)\\n### 环境开关\\n![file](/static/media/files/47/398eb7c6-e0a8-11e8-a274-0242ac120002.png?v=ec6085c8cc673610e4eb5fc60014ef94)\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2018-11-05 11:09:39\", \"author\": \"窦献策\"}', 1, '2018-11-2 16:49:23');
INSERT INTO `t_projects` VALUES (332, 'knowledge.book', '9ba4c522-de7d-11e8-8585-0242ac120002', 187, '{\"title\": \"开发相关\", \"blog\": \"# 1.版本规划\\n* 0.9 体验版本/20181102\\n> 实现旧工具版本的骨架迁移和基础框架构建\\n> 实现数据构造过程的可视化\\n> 进行数据API的框架搭建\\n * 1.0 首个正式版本\\n > 优化后台执行任务管理\\n > 优化底层数据存储结构\\n > 提供数据访问API\\n# 2. 配置库\\n后台归档：http://tech.xiaoniu88.net/svn/codes/testing/AutomationTesting/OpenStark  \\n前端归档：http://tech.xiaoniu88.net/svn/codes/testing/AutomationTesting/OpenStarkWeb   \\n# 3.架构设计\\n* 技术栈\\n前端采用  \\nantd+dva+websocket+react  \\n后端采用  \\ntornado+asyncio+python  \\nAPI文档  \\nswagger-ui+yaml  \\n# 3.参与开发\\n* 彭鹏  \\n* 窦献策  \", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2018-11-06 09:25:39\", \"author\": \"窦献策\"}', 1, '2018-11-2 16:59:29');
INSERT INTO `t_projects` VALUES (333, 'knowledge.book', '4a76e6a6-e0be-11e8-bb91-0242ac120002', 187, '{\"title\": \"工具收藏\", \"blog\": \"* 第三方工具  \\n[WebSocket调试工具](http://coolaf.com/tool/chattest)\\n\\n* 代码格式化工具   \\n[代码格式化：JSON](http://tool.oschina.net/codeformat/json/)  \\n[代码格式化：SQL](http://tool.oschina.net/codeformat/sql)  \\n[代码格式化：XML](http://tool.oschina.net/codeformat/xml)  \\n[代码格式化：HTML](http://tool.oschina.net/codeformat/html)  \\n[代码格式化：JS](http://tool.oschina.net/codeformat/js)  \", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2018-11-05 13:50:59\", \"author\": \"窦献策\"}', 1, '2018-11-5 13:47:33');
INSERT INTO `t_projects` VALUES (334, 'knowledge.book', '2030b362-e0bf-11e8-bb91-0242ac120002', 187, '{\"title\": \"统一执行\", \"blog\": \"### 1. 特色服务  \\n* 提供7*24不间断例行驱动执行服务\\n* 提供执行环境初始化机制（外挂环境脚本）\\n* 提供通用数据构造支持（查询、动态构造）\\n### 2. 前期调试  \\n入口：http://172.20.17.136:8080/job/XNOL_DailyBuild/  \\nSVN归档：http://tech.xiaoniu88.net/svn/codes/testing/AutomationTesting/DailyBuild  \\n![file](/static/media/files/47/54b01c00-e0c3-11e8-bb91-0242ac120002.png?v=43aeeed9cb6c0890d55cc3e02f9ade09)\\n### 3. 基本思路 \\n#### 3.1 统一驱动过程描述\\n| 序号 | 步骤 | 说明 |\\n| -------- | -------- | -------- |\\n| 1     | 更新配置 | 从SVN获取各组用例统一执行的控制逻辑     |\\n| 2     | 用例执行：Product_API、Product_GUi    | 产品组用例执行|\\n| 2     | 用例执行：Channel_API、Channel_GUi    | 营销渠道用例执行|\\n| 2     | 用例执行：Mobile_API、Mobile_GUi    | 移动组用例执行|\\n| 2     | 用例执行：Tech_API、Tech_GUi    | 技术专项组用例执行|\\n| 3     | 测试报告  | 汇总展示用例执行结果    |\\n#### 3.2 驱动适配可选方案（备选）\\n1. 脚本SVN归档+提供统一的执行入口+输出JUnit格式XML报告  \\n* 预研素材：http://tech.xiaoniu88.net/svn/codes/testing/AutomationTesting/AutoXnol/code\\n3. 脚本SVN归档+JMeter脚本文件+辅助生成脚本/JUnit格式XML报告 \\n* 预研素材：http://tech.xiaoniu88.net/svn/codes/testing/AutomationTesting/DailyBuild/jmx   \\n4. 提供RESTFul的执行驱动入口+响应JUnit格式XML报告 \\n* 预研素材： \\n### 4. 基本约定 \\n1.  【用例分类】\\n* 用例按测试业务组进行第1级分类(产品组、营销渠道组、移动组、技术专项组)，分类汇总业务测试组自动化工作成果\\n* 用例按脚本实现技术进行第2级分类(API、GUI)，分类定制响应的执行驱动规则\\n2.  【测试报告】\\n* 报告格式约定：统一使用JUnit/XML测试报告格式进行汇总（仅限于统一驱动）\\n* 数据上报格式：参考 [开放接口说明:测试结果上报接口](http://172.20.20.160:8090/knowledge/books/blog/186/327)  \\n4.  【环境约定】\\n* 业务测试组：目前暂时由各业务组根据自己用例调试情况提供对应的环境，进行各自的环境管理\\n* 技术专项组：提供公共的环境管理驱动和整合操作\\n5.  【驱动时间约定】\\n* 每日CI：每天晚上10点~12点进行例行驱动执行\\n\\n### 5. 相关脚本\\n* 远程驱动CI执行（面向测试管理平台）\\n```\\n# 引用标准库\\nimport time\\n\\n# 引用第三方库\\nimport jenkins\\n\\n# 环境变量定义\\nCI_URI = \\\"http://172.20.17.136:8080\\\"\\nCI_USER = \\\"xn044099\\\"\\nCI_PASSWORD = \\\"Ace12#45\\\"\\n\\n\\ndef run(job_ame):\\n    server = jenkins.Jenkins(url=CI_URI, username=CI_USER, password=CI_PASSWORD)\\n    server.build_job(name=job_ame)\\n    while True:\\n        time.sleep(1)\\n        print(\'check running job...\')\\n        if len(server.get_running_builds()) == 0:\\n            break\\n        else:\\n            time.sleep(20)\\n    last_build_number = server.get_job_info(job_ame)[\'lastCompletedBuild\'][\'number\']\\n    build_info = server.get_build_info(job_ame, last_build_number)\\n    build_result = build_info[\'result\']\\n    print(\'Build result is \' + build_result)\\n\\n\\nif __name__ == \'__main__\':\\n    run(\'XNOL_DailyBuild\')\\n```\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2018-11-06 17:32:10\", \"author\": \"窦献策\"}', 1, '2018-11-5 13:53:31');
INSERT INTO `t_projects` VALUES (337, 'knowledge.book', '5ed8dcb8-e0cc-11e8-81a1-0242ac120002', 203, '{\"title\": \"技术专项组相关信息\", \"blog\": \"### 服务器账号信息\\n\\n| 服务器 | 账号 | 密码 |\\n| -------- | -------- | -------- |\\n| 172.20.20.160     | root     | test123456     |\\n\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-05 15:28:51\", \"author\": \"彭鹏\"}', 0, '2018-11-5 15:28:20');
INSERT INTO `t_projects` VALUES (338, 'knowledge.book', 'bcdcf742-e175-11e8-8c89-f44d3016f44c', 186, '{\"title\": \"性能测试结果上报接口\", \"blog\": \"**接口地址:** http://172.20.20.160:8090/api/py/chart/performance\\n\\n**请求方式:** POST\\n\\n**请求参数(Form或JSON格式):**\\n\\n|参数|  说明|\\n|-|-|\\n|key | 接口唯一编号, 用以区分不同接口, 必填|\\n|name |接口名称, 选填, 建议填写|\\n|time|  接口响应时间, 必填|\\n|ip   | 测试环境IP, 必填|\\n|url  |  接口url, 必填|\\n|description  | 接口描述, 选填|\\n|userNum |并发用户数, 选填|\\n|threshold | 接口达标阈值, 单位毫秒, 选填|\\n|token  | 接口鉴权token, 必填, 可到测试平台个人中心 http://172.20.20.160:8090/account/settings/base 获取|\\n\\n**请求参数举例:**\\n\\n    {\\\"key\\\": \\\"AppLogin\\\", \\\"name\\\": \\\"APP登录\\\", \\\"time\\\": \\\"200\\\", \\\"ip\\\": \\\"172.20.20.111\\\", \\\"url\\\": \\\"https://172.20.77.17:8477/mobile/220/login.json\\t\\\", \\\"description\\\": \\\"APP登录\\\", \\\"userNum\\\": \\\"150\\\", \\\"threshold\\\": \\\"50\\\", \\\"token\\\": \\\"634756755A33426C6************45459324C6D4E7662513D3D\\\"}\\n\\n**响应返回举例:**\\n\\n    {\\\"status\\\": \\\"SUCCESS\\\", \\\"message\\\": \\\"新增统计信息成功!\\\", \\\"data\\\": \\\"\\\"}\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-06 15:05:52\", \"author\": \"彭鹏\"}', 1, '2018-11-6 11:40:43');
INSERT INTO `t_projects` VALUES (339, 'knowledge.book', '1dd26414-e1ad-11e8-ac26-0242ac120002', 215, '{\"title\": \"如何开通外网\", \"blog\": \"1. 进入控制台-环境管理\\n![file](/static/media/files/28/68cd33a0-e1ac-11e8-ac26-0242ac120002.png?v=20762e2fa9b4bae8654ebbf290d66c34)\\n\\n1. 点击服务器信息\\n ![file](/static/media/files/28/b26312a0-e1ac-11e8-ac26-0242ac120002.png?v=c90fc3b71b7a525637ab420c5dacc234)\\n \\n1. 勾选需要开通外网的服务器\\n![file](/static/media/files/28/f6592e40-e1ac-11e8-ac26-0242ac120002.png?v=267a97c2bd8018f12e75a122047ff074)\\n\\n1. 点击开通外网按钮后选择时间段即可\\n![file](/static/media/files/28/e59c612a-1867-11e9-a423-0242ac120004.png?v=1dff672be6c0af8fd662afe249b88356)\\n> 请注意选择时间，精确选择到小时，会在结束时间点自动发送关闭外网的邮件，如果预计测试时间有所延长，请适当延长结束时间，或重新申请。\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-01-15 09:54:15\", \"author\": \"彭鹏\"}', 1, '2018-11-6 18:17:08');
INSERT INTO `t_projects` VALUES (340, 'knowledge.book', '85c86902-e65c-11e8-b789-0242ac120002', 215, '{\"title\": \"如何从准生产同步空数据库\", \"blog\": \"### 同步空库\\n1. 进入部署小工具-同步准生产空数据库\\n![file](/static/media/files/28/debcfb1e-e65b-11e8-b789-0242ac120002.png?v=b675bc0bfb86614859653391ea53c526)\\n\\n3. 源数据库选择-准生产测试环境\\n![file](/static/media/files/28/f07272da-e65b-11e8-b789-0242ac120002.png?v=3c1ac6e28bcb00203d5726ffb971f557)\\n\\n5. 选择需要同步的库，留空则会同步所有的库\\n![file](/static/media/files/28/fa94f88c-e65b-11e8-b789-0242ac120002.png?v=79ea847b1a8297ed590bb11fcdaa9ef3)\\n\\n7. 选择需要同步的表，留空则会同步所有的表，同步特定的表只能选择一个数据库进行同步\\n![file](/static/media/files/28/04d6c3de-e65c-11e8-b789-0242ac120002.png?v=2499aa8a9b23d4b7890a1e8ab36b3d67)\\n\\n9. 选择需要同步的环境后，点击开始同步即可\\n![file](/static/media/files/28/0e0cb58a-e65c-11e8-b789-0242ac120002.png?v=21cc9b61fed3291a69d70b3c4863782d)\\n\\n\\n### 配置初始化数据\\n1. 右边显示的是会同时同步数据的表，如果没有需要的表，可以新增或删除，请慎重进行删除操作，以免造成不必要的麻烦。\\n![file](/static/media/files/28/24c22846-e65c-11e8-b789-0242ac120002.png?v=e3ef2cb0c87ee91476f3eb5ef254d988)\\n\\n1. 选择源数据库-准生产环境获取数据库列表，选择列表切换不同的库查看需要同步数据的表。\\n![file](/static/media/files/28/6fdff3b2-e65c-11e8-b789-0242ac120002.png?v=d8ae451ba4b196a6a14672fcaded7b56)\\n\\n3. 点击\\\"New Table\\\"按钮进行新增操作\\n![file](/static/media/files/28/77b564f0-e65c-11e8-b789-0242ac120002.png?v=1e8e0a5dd4e8e054fa4b2a930d9684ce)\\n\\n5. 直接点击表标签进行删除操作\\n![file](/static/media/files/28/819a3c20-e65c-11e8-b789-0242ac120002.png?v=9042b7b6554f5b09b9b87536d109f87c)\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-12 17:25:12\", \"author\": \"彭鹏\"}', 1, '2018-11-12 17:22:49');
INSERT INTO `t_projects` VALUES (341, 'knowledge.book', '3bfd95a8-f468-11e8-8743-0242ac120004', 215, '{\"title\": \"测试资源整合规划图\", \"blog\": \"![file](/static/media/files/28/128a410c-e6ef-11e8-b22a-0242ac120002.png?v=678f9f4e2b44173e147edbd477e7ad6f)\\n\\n![file](/static/media/files/28/44fd413e-f6da-11e8-b6f1-0242ac120004.png?v=5d911a387eedc0f22106f0d0c9d65933)\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-12-03 17:04:20\", \"author\": \"彭鹏\"}', 0, '2018-11-30 14:21:55');
INSERT INTO `t_projects` VALUES (342, 'knowledge.book', '9e8fb002-f47c-11e8-b6f1-0242ac120004', 193, '{\"title\": \"测试平台反馈问题列表\", \"blog\": \"| 序号 | 问题 |解决方案| 状态|反馈者 \\n| -------- | -------- | ----|---- |-|\\n| 1     | 刚打开平台时，浏览器窗口标题显示不友好     | 因没及时获取到后台配置而显示的默认值，已改     |已修复|朱沛玲\\n|2|“交付部署信息”功能选择日期时显示异常，部分页面元素显示不整齐|该功能是罗菊旺开发，测试显示正常，可能是浏览器兼容问题，显示不整齐问题是嵌入的第三方页面，默认没全屏导致页面宽度变窄而挤压，已修改为进入页面时默认收起左边菜单|已修复|朱沛玲\\n|3|希望集成原云平台的充值、查询账户分表、同步空库等功能|新功能已开发完成并上线|已上线|滕民智、周游\\n|4|发布资产期限不对|期限参数匹配错误，已修改|已修复|龙艳玲\\n|5|同步空库失败|生成SQL脚本时出错，BUG已修复|已修复|丁海亮、张用辉\\n|6|希望增加清理MQ缓存并重启MQ的功能|已增加清理MQ缓存并重启MQ的功能，具体应用还需要手动重启|已上线|汪磊\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-30 16:47:50\", \"author\": \"彭鹏\"}', 0, '2018-11-30 16:47:50');
INSERT INTO `t_projects` VALUES (343, 'knowledge.book', '2c59882c-f482-11e8-b6f1-0242ac120004', 215, '{\"title\": \"测试环境管理\", \"blog\": \"### 环境信息列表\\n![file](/static/media/files/28/c5895a94-f47e-11e8-b6f1-0242ac120004.png?v=38aa2b69e0d02feb7fe48784063ee85d)\\n\\n### 获取HOST信息\\n![file](/static/media/files/28/fe62b0fe-f47e-11e8-b6f1-0242ac120004.png?v=c351c5650052dd1dccb07e53edc004bb)\\n\\n### 服务器信息列表\\n![file](/static/media/files/28/3fc41d26-f47f-11e8-b6f1-0242ac120004.png?v=a816f010e063b9bd8271f48a8280e72d)\\n\\n### 开通外网\\n![file](/static/media/files/28/7f68d908-f47f-11e8-b6f1-0242ac120004.png?v=275acdcb772cc5cfa17d4f6bfa5dfb62)\\n\\n### 刷新状态\\n![file](/static/media/files/28/97cff53a-f47f-11e8-b6f1-0242ac120004.png?v=2f06986d1da667f02b5eefeb428c6fe1)\\n\\n### 新增服务器信息\\n![file](/static/media/files/28/1b5f72da-f481-11e8-b6f1-0242ac120004.png?v=af0371c56cd5f83c6de631ca8e43abdd)\\n> 名称填写格式规范: 类型_名称\\n> \\n> 类型: 填写实际的类型英文名称，如: Windows、Linux、Mysql、MQ等\\n> \\n> 名称: 任意字符串\\n> \\n\\n### 信息填写说明\\n![file](/static/media/files/28/e0114e64-f481-11e8-b6f1-0242ac120004.png?v=8828c6e8591724c292ab26660d2f15f8)\\n> 请务必准确填写各项信息，自动化测试环境切换的所有配置依赖于这里的HOST和IP信息，数据库连接相关的参数信息也依赖于此的端口、账户、密码等信息，如果有错误或者变更，请及时更新。\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2018-11-30 17:29:25\", \"author\": \"彭鹏\"}', 1, '2018-11-30 17:27:36');
INSERT INTO `t_projects` VALUES (344, 'knowledge.book', '74be9ec0-0334-11e9-b6f1-0242ac120004', 189, '{\"title\": \"修改定时任务下次执行时间\", \"blog\": \"便于做功能测试，不产生多余的定时任务日志，执行自己想要的定时任务。\\n\\nuse cms;\\nUPDATE qrtz_triggers SET NEXT_FIRE_TIME=1750171949379 WHERE 1=1;\", \"uid\": 42, \"type\": \"md\", \"updateTime\": \"2018-12-19 10:21:03\", \"author\": \"张勇锋\"}', 1, '2018-12-19 10:19:04');
INSERT INTO `t_projects` VALUES (347, 'knowledge.book', 'ea7e2858-121e-11e9-8828-0242ac120004', 189, '{\"title\": \"产品系统接口调用大全\", \"blog\": {\"blocks\": [{\"key\": \"fqrun\", \"text\": \"发标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fe96l\", \"text\": \"#按资产流水号发布散标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"drkns\", \"text\": \"#传入参数: 资产流水号,对应xnaccount.t_loan_account_book的字段serialId\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"735d1\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.publishProduct(\\\"sewr234234323\\\");\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fgha1\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"24sk6\", \"text\": \"#发布原始资产标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"nfn1\", \"text\": \"#传入参数: 资产流水号(对应xnaccount.t_loan_account_book的字段serialId)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"c8coq\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.publishOriginLoanCredit(\\\"sewr234234323\\\");\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"bfcf9\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"a3v8h\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fncdi\", \"text\": \"满标：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"2p6fq\", \"text\": \"#处理产品满标(主要是更新产品状态为已满标,然后发MQ,更新产品状态为还款中,生成还款计划)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"8uo6d\", \"text\": \"#传入参数: 产品ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"83jig\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.productFull(1111);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"548h3\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"82ohv\", \"text\": \"#产品满标后的处理(主要是更新产品状态为还款中,生成还款计划)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"29er2\", \"text\": \"#传入参数: 产品ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"d8qg5\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.publicFullProcess(1111);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"a60tf\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"foaaq\", \"text\": \"#债权满标后处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"acu0j\", \"text\": \"#传入参数: 转让后生成的债权ID(对应表pcts.t_loan_credit的字段ID)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"55tia\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.transferSuccess(1232342);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"csjth\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"e62k0\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"7qjh4\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"b530b\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"3c7f\", \"text\": \"流标：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"6hpfb\", \"text\": \"#处理产品流标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"c994b\", \"text\": \"#传入参数: 产品ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"b6ire\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doProductSoldFail(1111);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"2fb41\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"336pi\", \"text\": \"#所有安稳投转让标进行流标处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9dblo\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doAllOptimizeTransferSoldFail();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"avbla\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"5ckku\", \"text\": \"#强制流标处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"83jue\", \"text\": \"#将存放在表pcts.t_template_data(select keyStr from t_template_data where dataType = 1 and status=0)获取到的值为产品ID,进行强制流标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"8r4ud\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doForceSoldFail();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dsaat\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1ol8l\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"a4jm7\", \"text\": \"转让：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"f7r6h\", \"text\": \"#发布转让债权标\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dl85m\", \"text\": \"#传入参数: 转让后生成的债权ID(对应表pcts.t_loan_credit的字段ID)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"7ae6p\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.publishLoanCredit(1232342);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"3mels\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"60ukp\", \"text\": \"#转让结果检查\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"flqv2\", \"text\": \"#传入参数: 投资转让订单号(对应表pcts.t_invest_transfer的字段orderId)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9dlmm\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doTransferFinish(\\\"1232342234\\\");\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"31qng\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dnl12\", \"text\": \"#用户投资强制转让\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"bchf3\", \"text\": \"#传入参数: 用户ID, 投资ID(对应表pcts.t_invest的字段id)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"e4taa\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doUserInvestTransfer(1231232, 434343);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1i15r\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fjvbj\", \"text\": \"#强制投资转让处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"c9s9u\", \"text\": \"#将存放在表pcts.t_template_data(select keyStr from t_template_data where dataType = 3 and status=0)获取到的值为投资ID,进行强制转让\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fv9m0\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doForceTransfer();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"4illh\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1h3ir\", \"text\": \"#投资转让撤回\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"rsqn\", \"text\": \"#传入参数: 投资ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"92kke\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doInvestRevokeRefund(434343);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"ftuee\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"aqe8d\", \"text\": \"#投资自动转让补偿\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"an3ev\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.investAutoTransferCompensate();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"f7mdk\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"cnp4s\", \"text\": \"#强制投资转让处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"5402l\", \"text\": \"#将存放在表pcts.t_template_data(select keyStr from t_template_data where dataType = 3 and status=0)获取到的值为投资ID,进行强制转让\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"92qio\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doForceTransfer();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"f21iq\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"epp31\", \"text\": \"#安稳投取消转让\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"aadrc\", \"text\": \"#传入参数: 投资ID, 用户ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9ubhl\", \"text\": \"invoke com.neo.xnol.pcts.account.facade.AccountExternalFacade.cancelOptimizeTransfer(11111, 231231)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"7cjgn\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"5boc0\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"6b240\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"cf1mv\", \"text\": \"还款：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"19jip\", \"text\": \"#资产提前还款处理\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"4baj2\", \"text\": \"#传入参数: 资产ID(对应表pcts.t_loan的字段id)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"28i06\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doLoanPrepay(11111);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"fjqak\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"2s8ip\", \"text\": \"#转让还款\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"6pftq\", \"text\": \"#传入参数: 投资转让订单号(对应表pcts.t_invest_transfer的字段orderId)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"e44lg\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doOptimizeRepay(\\\"1232342234\\\");\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1uth5\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9ukef\", \"text\": \" ##单笔资产还款\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"7nv16\", \"text\": \" com.neo.xnol.loan.facade.RepayFacade.repay(\'2019-01-08\',10000,true,\\\"序列号\\\") \", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9i56s\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [{\"offset\": 0, \"length\": 44, \"style\": \"COLOR-000000\"}, {\"offset\": 0, \"length\": 44, \"style\": \"FONTSIZE-16\"}, {\"offset\": 0, \"length\": 44, \"style\": \"BGCOLOR-FFFFFF\"}], \"entityRanges\": [], \"data\": {}}, {\"key\": \"anoh7\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"eggem\", \"text\": \"复投：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9ivhj\", \"text\": \"#触发复投\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1vud5\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doReInvest();\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"cn3fn\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"egp7k\", \"text\": \"#处理某笔投资复投\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1o251\", \"text\": \"#传入参数: 投资订单号(对应表pcts.t_invest的字段orderId)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dlhur\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doReinvest(\\\"1232342234\\\");\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"cp1b1\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"f4ogl\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"flmge\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"ba932\", \"text\": \"置顶：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"e1jid\", \"text\": \"#投资转让债权置顶\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"7psm4\", \"text\": \"#传入参数: 投资ID(对应表pcts.t_invest的字段id)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"73att\", \"text\": \"invoke com.neo.xnol.pcts.product.facade.PctsTestFacade.doSettopByInvestId(434343);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"2rrlh\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"1giba\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"842fe\", \"text\": \"查询：\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"9sn83\", \"text\": \"#查询用户投资详情\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"2g10n\", \"text\": \"#传入参数: 投资ID, 用户ID, 是否新系统标(true: 新系统pcts, false: 老系统product)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"90tca\", \"text\": \"invoke com.neo.xnol.pcts.account.facade.AccountExternalFacade.queryInvestDetail(11111, 231231, true)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dqeaq\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dhc00\", \"text\": \"#查询最近转让申请结果\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"dv6t5\", \"text\": \"#传入参数: 投资ID, 用户ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"87dbo\", \"text\": \"invoke com.neo.xnol.pcts.account.facade.AccountExternalFacade.queryOptimizeTransferApplyOrResult(11111, 231231)\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"eijb3\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"3k7n4\", \"text\": \"#获取用户待收/已收数据\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"da748\", \"text\": \"#传入参数: 用户ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"4bsav\", \"text\": \"invoke com.neo.xnol.pcts.account.facade.AccountExternalFacade.selectInvestAccount(231231);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"19o8l\", \"text\": \"--------------------------------------------\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"8j8ds\", \"text\": \"#获取用户所投资所有产品的待收/已收数据\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"64h53\", \"text\": \"#传入参数: 用户ID\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"5e0um\", \"text\": \"invoke com.neo.xnol.pcts.account.facade.AccountExternalFacade.selectAccountStatisticsTotal(231231);\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}, {\"key\": \"8hk53\", \"text\": \"\", \"type\": \"unstyled\", \"depth\": 0, \"inlineStyleRanges\": [], \"entityRanges\": [], \"data\": {}}], \"entityMap\": {}}, \"uid\": 42, \"type\": \"html\", \"updateTime\": \"2019-01-08 17:01:56\", \"author\": \"张勇锋\"}', 1, '2019-1-7 09:52:40');
INSERT INTO `t_projects` VALUES (353, 'knowledge.book', '98fef300-125e-11e9-b197-0242ac120004', 203, '{\"title\": \"JACOCO搭建指南\", \"blog\": \"### JACOCO是什么\\nJaCoCo是Java的免费代码覆盖库，由EclEmma团队基于多年的使用和整合现有库所获得的经验而创建。JACOCO官网地址：http://www.jacoco.org/jacoco/, [下载最新版 JACOCO](https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.jacoco&a=jacoco&e=zip&v=LATEST)。\\n\\n### 使用JACOCO代理收集覆盖率数据\\nJaCoCo使用类文件检测来记录执行范围数据。Class文件使用一个所谓的Java代理进行实时检测。该机制允许在类加载期间独立于应用程序框架的所有类文件的内存预处理。\\nJaCoCo代理收集执行信息，并根据请求或JVM退出时转储它。执行数据输出有三种不同的模式：\\n>file：在JVM终止处执行数据被写入本地文件。\\n>\\n>tcpserver：外部工具可以连接到JVM并通过套接字连接检索执行数据。在VM退出时可选的执行数据重置和执行数据转储。\\n>\\n>tcpclient：在启动时，JaCoCo代理连接到给定的TCP端点。执行数据根据请求写入套接字连接。在VM退出时可选的执行数据重置和执行数据转储。\\n\\n代理jacocoagent.jar是JaCoCo发行版的一部分，包含所有必需的依赖关系。可以使用以下JVM选项激活Java代理：\\n```\\n-javaagent:[yourpath/]jacocoagent.jar=[option1]=[value1],[option2]=[value2]\\n```\\nJaCoCo代理接受以下选项：\\n\\n|选项|描述|默认|\\n|-|-|-|\\n|destfile|执行数据的输出文件的路径。|   jacoco.exec|\\n|append|如果设置为true并且执行数据文件已经存在，则将覆盖数据附加到现有文件。如果设置为 false，则将替换现有的执行数据文件。  |true|\\n|includes|    执行分析中应包含的类名列表。列表条目以冒号（:）分隔，可以使用通配符（*和?）。除了性能优化或技术角落案例，通常不需要此选项。 | * （所有类）|\\n|excludes  |  应从执行分析中排除的类名称列表。列表条目以冒号（:）分隔，可以使用通配符（*和?）。除了性能优化或技术角落案例，通常不需要此选项。   |空（不排除类）|\\n|exclclassloader| 应从执行分析中排除的类加载器名称的列表。列表条目以冒号（:）分隔，可以使用通配符（*和 ?）。如果特殊框架与JaCoCo代码工具发生冲突，特别是无法访问Java运行时类的类加载器，则可能需要此选项。 |sun.reflect.DelegatingClassLoader|\\n|inclbootstrapclasses  |  指定是否还应该检测引导类加载器的类。谨慎使用此功能，需要大量包括/不包括调整。 |false|\\n|inclnolocationclasses |  指定是否还应该检测没有源位置的类。通常这样的类是在运行时产生的，例如通过模拟框架，因此在默认情况下被排除。 |  false|\\n|sessionid   |与执行数据一起写入的会话标识符。没有这个参数，代理就会创建一个随机的标识符。  |自动生成|\\n|dumponexit|  如果设置为true覆盖数据，将在VM关闭时写入。如果file指定了转储，或者输出为tcpserver/ tcpclient 并且在虚拟机终止时连接处于打开状态，则只能写入转储。 |   true|\\n|output|  用于写入覆盖率数据的输出方法。有效的选项是：<br>**file：**在虚拟机终止执行数据写入destfile属性中指定的文件。<br>**tcpserver：**代理侦听由address和port属性指定的TCP端口上的传入连接。执行数据被写入到这个TCP连接。<br>**tcpclient：**启动时，代理将连接到由address和port属性指定的TCP端口。执行数据被写入到这个TCP连接。<br>**none：**不要产生任何输出。<br>请参阅下面的安全考虑。| file|\\n|address |当输出方法为tcpserver或连接到 输出方法时要绑定的IP地址或主机名 tcpclient。在tcpserver模式中，值“ *”使代理接受任何本地地址上的连接。 |回环接口|\\n|port   | 当输出方法是绑定的端口，tcpserver或者当输出方法是连接的端口tcpclient。在 tcpserver模式下，端口必须可用，这意味着如果多个JaCoCo代理应该在同一台机器上运行，则必须指定不同的端口。|   6300|\\n|classdumpdir |   agent所调用到的所有class文件的目录。这可以用于调试目的，或者在动态创建类的情况下，例如当使用脚本引擎时。  | 没有转储|\\n|jmx| 如果设置为true代理通过名称下的JMX 公开 功能org.jacoco:type=Runtime。请参阅下面的安全考虑。|   false|\\n\\n#### 配置tomcat\\n因我们的应用是docker镜像，所以测试的tomcat也选择了docker版。\\n启动tomcat时，需要与宿主机绑定端口，jacoco代理端口配置为8888\\n```\\ndocker run --name tomcat -p 8080:8080 -p 8888:8888 tomcat\\n```\\n将下载来的jacoco拷贝到docker中\\n```\\ndocker cp D:\\\\autoTest\\\\jacoco tomcat:/home\\n```\\n将docker中的tomcat启动脚本catalina.sh拷贝到宿主机进行修改\\n```\\ndocker cp tomcat:/usr/local/tomcat/bin/catalina.sh D:\\\\autoTest\\\\catalina.sh\\n```\\n打开catalina.sh，在合适的位置增加一行\\n```\\nJAVA_OPTS=\\\"$JAVA_OPTS -javaagent:/home/jacoco/lib/jacocoagent.jar=output=tcpserver,address=*,port=8888,destfile=/home/jacoco.exec,append=true,classdumpdir=/usr/local/tomcat/webapps/examples/WEB-INF\\\"\\n```\\n将catalina.sh文件拷贝回tomcat\\n```\\ndocker cp D:\\\\autoTest\\\\catalina.sh tomcat:/usr/local/tomcat/bin/catalina.sh\\n```\\n重启tomcat\\n```\\ndocker restart tomcat\\n```\\n#### 配置jenkins\\n进入jenkins的插件管理中心，搜索插件JaCoCo plugin并安装jacoco插件\\n创建ant的build.xml文件\\n```\\n<project xmlns:jacoco=\\\"antlib:org.jacoco.ant\\\" name=\\\"Dump JaCoCo\\\" default=\\\"dump\\\">\\n    <!--Jacoco ant lib的安装路径-->\\n    <property name=\\\"jacoco.ant.lib\\\" location=\\\"./lib/jacocoant.jar\\\"/>\\n    <!--最终生成.exec文件的路径，Jacoco就是根据这个文件生成最终的报告的-->\\n    <property name=\\\"result.exec.file\\\" location=\\\"./jacoco.exec\\\"/>\\n    <!--远程tomcat服务的ip地址-->\\n    <property name=\\\"jacoco.server.address\\\" value=\\\"172.20.17.84\\\"/>\\n    <!--远程tomcat服务中jacoco的端口-->\\n    <property name=\\\"jacoco.server.port\\\" value=\\\"8888\\\"/>\\n    <taskdef uri=\\\"antlib:org.jacoco.ant\\\" resource=\\\"org/jacoco/ant/antlib.xml\\\">\\n        <classpath path=\\\"${jacoco.ant.lib}\\\"/>\\n    </taskdef>\\n    <!--dump任务：\\n    根据配置的ip地址和端口号，访问目标tomcat服务，并生成.exec文件。\\n    其中：\\n    reset=true时，会在dump出exec文件后，清空覆盖率数据；\\n    append=false时，dump出的exec文件会覆盖原有的exec文件；\\n    append=true时，dump出的exec文件追加至原有的exec文件；\\n    -->\\n    <target name=\\\"dump\\\">\\n        <jacoco:dump address=\\\"${jacoco.server.address}\\\" port=\\\"${jacoco.server.port}\\\" reset=\\\"true\\\" destfile=\\\"${result.exec.file}\\\" append=\\\"true\\\"/>\\n    </target>\\n</project>\\n```\\n将创建好的build.xml和jacoco lib库上传到SVN中，注意build.xml中配置的jacoco lib的路径，需要在svn中存在。\\n在Jenkins中创建一个jacoco构建项目，配置好SVN，在“增加构建步骤”中添加“Invoke Ant”，在“Targets”中填写“dump”\\n在“增加构建后操作步骤”中添加“Record JaCoCo coverage report”，根据页面说明配置相应的配置项，保存项目，构建即可。\\n![file](/static/media/files/28/0bb1d71a-125e-11e9-b197-0242ac120004.png?v=15a77b050616bbd7c7ade898eb2c7869)\\n### 报告指标说明\\n![file](/static/media/files/28/574601f6-125e-11e9-b197-0242ac120004.png?v=bc5b737de1a447a9c4ff0fe1801c1efc)\\n>**行覆盖率(line)：**度量被测程序的每行代码是否被执行，判断标准行中是否至少有一个指令被执行。\\n**类覆盖率(class)：**度量计算class类文件是否被执行。\\n**分支覆盖率(line)：**度量if和switch语句的分支覆盖情况，计算一个方法里面的总分支数，确定执行和不执行的分支数量。\\n**方法覆盖率(branch)：**度量被测程序的方法执行情况，是否执行取决于方法中是否有至少一个指令被执行。\\n**指令覆盖(instruction)：**计数单元是单个java二进制代码指令，指令覆盖率提供了代码是否被执行的信息，度量完全独立源码格式。\\n**圈复杂度(complexity)：**在（线性）组合中，计算在一个方法里面所有可能路径的最小数目，缺失的复杂度同样表示测试案例没有完全覆盖到这个模块。\\n\\n![file](/static/media/files/28/60cddd5c-125e-11e9-b197-0242ac120004.png?v=a5622e9f9e1401c013792b722d4e5e79)\\n>标示绿色的为行覆盖充分，标红色的为未覆盖的行，黄色菱形的为分支部分覆盖，绿色菱形为分支完全覆盖。\\n\\n\\n\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-03-08 17:49:23\", \"author\": \"彭鹏\"}', 1, '2019-1-7 17:28:31');
INSERT INTO `t_projects` VALUES (354, 'knowledge.book', '416fb54c-125f-11e9-b197-0242ac120004', 215, '{\"title\": \"JACOCO覆盖率检查操作指南\", \"blog\": \"### 概览\\n**Jenkins地址：[JACOCO功能测试覆盖率监控](http://172.20.20.160:8091/job/INNER_JACOCO测试覆盖率监控)**\\n![file](/static/media/files/28/cbbfbd4c-125e-11e9-b197-0242ac120004.png?v=4e95acdef4362b886a21ba03d0372dbc)\\n![file](/static/media/files/28/cf6cd1a0-125e-11e9-b197-0242ac120004.png?v=20a748e5f9d79fe7d060e99a33f6e05a)\\n\\n### 启动监控\\n![file](/static/media/files/28/de0d7944-125e-11e9-b197-0242ac120004.png?v=b8e5e9a51ef0ebb241b9546d2f5857fb)\\n>监控启动后，会每隔30秒收集一次数据，请确保APP正确加载了jacocoagent，端口统一为APP端口号+9，比如pcts的端口为60419，JACOCO会每隔30秒从60419端口采集一次数据。\\n>测试环境和APP都可以多选，如果不选择则表示监控所有的测试环境或APP，但是不建议这么做，对Jenkins所在服务器压力很大。\\n>每个APP的统计是单独的，但是不同测试环境的相同APP的数据会汇总在一起生成报告，方便统计目前相同的APP在不同的测试环境同时测试的数据。\\n\\n### 查看报告\\n![file](/static/media/files/28/e1c4849c-125e-11e9-b197-0242ac120004.png?v=b4f810ff5ec808c68ad8a6c254a30a54)\\n>查看报告时可单独查看某个环境或APP的覆盖率数据，也可以多选环境查看汇总后的数据。\\n\\n![file](/static/media/files/28/e6acacbe-125e-11e9-b197-0242ac120004.png?v=b55c0537a9d29d23b158df4ade03cd55)\\n>查看详细的报告，需要进入构建历史项目中的矩阵中选择进入。\\n\\n![file](/static/media/files/28/eaeb8598-125e-11e9-b197-0242ac120004.png?v=4ddcd2e17d1b892361443e90e25bc919)\\n![file](/static/media/files/28/ee5f3a08-125e-11e9-b197-0242ac120004.png?v=ffb1b6fc1ddcc427f6456334fc8371de)\\n![file](/static/media/files/28/f169632c-125e-11e9-b197-0242ac120004.png?v=b868567ad0711410ae7098c565e4ed87)\\n>**Instructions：** Jacoco计算的最小单位就是字节码指令。指令覆盖率表明了在所有的指令中，哪些被执行过以及哪些没有被执行。这项指数完全独立于源码格式并且在任何情况下有效，不需要类文件的调试信息。<br>\\n>**Branches：** Jacoco对所有的if和switch指令计算了分支覆盖率。这项指标会统计所有的分支数量，并同时支出哪些分支被执行，哪些分支没有被执行。这项指标也在任何情况都有效。异常处理不考虑在分支范围内。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;在有调试信息的情况下，分支点可以被映射到源码中的每一行，并且被高亮表示。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;红色钻石：无覆盖，没有分支被执行。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;黄色钻石：部分覆盖，部分分支被执行。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;绿色钻石：全覆盖，所有分支被执行。<br>\\n>**Cyclomatic Complexity：** Jacoco为每个非抽象方法计算圈复杂度，并也会计算每个类，包，组的复杂度。根据McCabe1996的定义，圈复杂度可以理解为覆盖所有的可能情况最少使用的测试用例数。这项参数也在任何情况下有效。<br>\\n>**Lines：** 该项指数在有调试信息的情况下计算。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;因为每一行代码可能会产生若干条字节码指令，所以我们用三种不同状态表示行覆盖率<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;红色背景：无覆盖，该行的所有指令均无执行。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;黄色背景：部分覆盖，该行部分指令被执行。<br>\\n&nbsp;&nbsp;&nbsp;&nbsp;绿色背景：全覆盖，该行所有指令被执行。<br>\\n>**Methods：** 每一个非抽象方法都至少有一条指令。若一个方法至少被执行了一条指令，就认为它被执行过。因为JaCoco直接对字节码进行操作，所以有些方法没有在源码显示（比如某些构造方法和由编译器自动生成的方法）也会被计入在内。<br>\\n>**Classes：** 每个类中只要有一个方法被执行，这个类就被认定为被执行。同Methods一样，有些没有在源码声明的方法被执行，也认定该类被执行。\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-01-15 10:01:31\", \"author\": \"彭鹏\"}', 1, '2019-1-7 17:33:14');
INSERT INTO `t_projects` VALUES (355, 'knowledge.book', '6ea39d14-1325-11e9-b197-0242ac120004', 189, '{\"title\": \"查询工具标的转让标方法\", \"blog\": \"    SELECT * FROM t_invest_item WHERE productId=593792; #productId为工具标的产品id\\n\\t\\n    SELECT * FROM t_transfer_credit WHERE investItemId = \'316910180403163921810178699416\';  #查询toCreditId（investItemId如果有多个，就带入多个查询）\\n\\t\\n    SELECT * FROM t_transfer_credit_relation WHERE creditId=887854;  -- creditId=t_transfer_credit.toCreditId\\n\\t\\n    SELECT * FROM t_product WHERE id=960505;   -- id=t_transfer_credit_relation.productId （即为转让标的产品id）\\n\\t\", \"uid\": 53, \"type\": \"md\", \"updateTime\": \"2019-01-08 18:19:00\", \"author\": \"操念\"}', 1, '2019-1-8 17:11:50');
INSERT INTO `t_projects` VALUES (356, 'knowledge.book', '2f553c3e-132b-11e9-b197-0242ac120004', 189, '{\"title\": \"产品相关task汇总\", \"blog\": \"散标改造\\t\\n\\n\\t\\t借款推送至理财端\\t0 */3 * * * ?\\tloanAssetsToProductTask\\tNORMAL\\t每3分钟触发\\n\\t\\t\\n\\t\\t资产端定时还款\\t0 15 2 ? * *\\trepaymentTimersTask\\tNORMAL\\t每天2点15分触发\\n\\t\\t\\n\\t\\t资产提前还款定时任务\\t0 0,15 3 * * ?\\tadvanceRepayTask\\tNORMAL\\t每天3点[0,15]分触发\\n\\t\\t\\n\\t\\t存续牛提前还款定时任务\\t0 35,45 3 * * ?\\tpctsLoanPrepaymentTask\\tNORMAL\\t每天3点[35,45]分触发\\n\\t\\t\\n\\t\\t产品流标处理\\t0 0,5 4 * * ?\\tproductSoldFailTask\\tNORMAL\\t\\\"(pcts)产品流标处理定时任务  每天4点[0,5]分触发\\\"\\n\\t\\t\\n\\t\\t产品满标后的还款与转让处理\\t*/10 * * * * ?\\tproductProcessTask\\tNORMAL\\t\\\"(pcts)产品满标后的还款与转让处理定时任务  每10秒触发\\\"\\n\\t\\t\\n\\t\\tpcts还款\\t0 */30 * * * ?\\tpctsRepaymentTask\\tNORMAL\\t\\\"pct失败还款重跑  每30分钟触发\\\"\\n\\n安稳投\\t\\t\\n\\n\\t\\t安稳投每日发布新产品定时任务\\t0 */5 * * * ?\\tpublishOptimizProductTask\\tNORMAL\\t每5分钟触发\\n\\t\\t\\n\\t\\t工具类产品每日满标定时任务\\t0 */5 * * * ?\\tfullToolProductTask\\tNORMAL\\t每5分钟触发\\n\\t\\t\\n\\t\\t散标---债权满标失败重跑定时任务\\t0 */5 * * * ?\\tpctsCreditFullTask\\tNORMAL\\t每5分钟触发\\n\\t\\t\\n\\t\\t散标---产品满标失败重跑\\t*/30 * * * * ?\\tproductProcessTask\\tNORMAL\\t每30秒触发\\n\\t\\t\\n\\t\\t更新当日剩余债权为昨日昨日剩余债权\\t0 */5 0 * * ?\\tpctsUpdateSurplusCreditisYesTask\\tNORMAL\\t每天0点期间,每5分钟触发\\n\\t\\t\\n\\t\\t站岗资金复投定时任务\\t0 0,3,5 10,17 * * ?\\tstandCapitalReinvestTask\\tNORMAL\\t每天[10, 17]点[0,3,5]分触发\\n\\t\\t\\n\\t\\tpcts手动转让完成还款定时任务\\t0 */10 * * * ?\\tinvestTransferCheckTask\\tNORMAL\\t每10分钟触发\\n\\t\\t\\n\\t\\tpcts补发转让债权标的定时任务\\t0 */5 * * * ?\\tpublishTransferCreditTask\\tNORMAL\\t每5分钟触发\\n\\t\\t\\n\\t\\tpcts安稳投到期后每日计算预估收益\\t0 30 0 * * ?\\tdailyUpdateOptimizInterestTask\\tNORMAL\\t?年每月日0点30分触发\\n\\t\\t\\n\\t\\t安稳投和存续牛到期短信提醒\\t0 0 9 * * ?\\tsendExpireTransferRemind\\tNORMAL\\t每天9点触发\\n\\t\\t\\n存续牛\\t\\n\\n\\t\\t存续牛产品到期投资未转让每日计息定时任务\\t0 25 1 * * ?\\tdailyInterestAfterExpireTask\\tNORMAL\\t每天1点25分触发\\t\\t\\n\\t\\t\\t\\t\\t\\n月续牛\\t\\n\\n\\t\\t月续牛昨日计息任务\\t 0 5 0-5/1 * * ?\\tflexYesterdayInterest\\tNORMAL\\t每天从0-5点开始,每1小时5分触发\\n\\t\\t\\n\\t\\t月续牛赎回申请任务\\t 0 0 3-5/1 * * ?\\tflexRansomApplyData\\tNORMAL\\t每天从3-5点开始,每1小时触发\\n\\t\\t\\n\\t\\t月续牛赎回、补息定时调用任务\\t0 0 10-23/1 * * ?\\tflexTimingCallTask\\tNORMAL\\t每天从10-23点开始,每1小时触发\\n\\t\\t\\n\\t\\t月续牛每日发布新产品定时任务\\t0 */5 * * * ?\\tpublishFlexProductTask\\tNORMAL\\t每5分钟触发\\n\\t\\t\\t\\t\\t\\n优享牛（其他同安稳投）\\t\\n\\n\\t\\t优享牛到期自动转让任务\\t0 0 3,6,10 * * ?\\tdoNewOptimzAutoInvestTransfer\\tNORMAL\\t优享牛到期自动转让\\n\\t\\t\\n\\t\\t优享牛每日发布新产品\\t0 */5 * * * ?\\tpublishOptimizModifyProductTask\\tNORMAL\\t优享牛每日发布新产品\", \"uid\": 53, \"type\": \"md\", \"updateTime\": \"2019-01-08 18:16:49\", \"author\": \"操念\"}', 1, '2019-1-8 17:53:01');
INSERT INTO `t_projects` VALUES (357, 'knowledge.book', 'ea0924e6-13ad-11e9-b197-0242ac120004', 189, '{\"title\": \"查询债权池剩余金额SQL\", \"blog\": \"-- 查询债权池剩余金额\\nSELECT IFNULL(SUM(c.amount - c.raisedAmount),0) \\nFROM t_loan_credit c \\nWHERE c.STATUS = 10 AND c.type != 1 \\nAND c.amount - c.raisedAmount > 0\\n\\n-- 复投SQL\\nSELECT c.*\\nFROM t_loan_credit c LEFT JOIN t_loan l ON c.loanId = l.id\\nWHERE c.STATUS = 10\\nAND c.type != 1\\nAND c.amount - c.raisedAmount > 0\\nAND((c.termMode = 1\\nAND c.term <=366           \\nAND c.term >=1)\\nOR(c.termMode =  2\\nAND c.term <=12\\nAND c.term >= 1))\\nAND c.annualRate > 900\\nORDER BY c.setTop DESC, source DESC, c.type DESC,c.isYesSurplus DESC,isToolMatched DESC,c.annualRate ASC,c.amount DESC;\", \"uid\": 54, \"type\": \"md\", \"updateTime\": \"2019-01-09 09:28:48\", \"author\": \"彭扬\"}', 1, '2019-1-9 09:28:48');
INSERT INTO `t_projects` VALUES (359, 'knowledge.book', 'e3e9c234-14b9-11e9-854f-0242ac120004', 215, '{\"title\": \"知识库操作指南\", \"blog\": \"### 前言\\n知识库是为了给大家提供一个简单的写作平台来记录经验以及知识的分享，目前虽比较简陋，后续会增加搜索和文章列表等功能。\\n### 添加分类\\n进入知识库地图页，可以自行添加分类，最多二级。\\n\\n![file](/static/media/files/28/6ef9edd2-14aa-11e9-854f-0242ac120004.png?v=674ecd14daca34db3dd5985f9e636b98)\\n\\n如果需要在已经存在的一级分类下添加二级分类，将需要添加的一级分类复制到一级分类的文本框里，再填写二级分类即可。\\n\\n![file](/static/media/files/28/0a4fde84-14ad-11e9-854f-0242ac120004.png?v=451c43729965244f440df666e907e49d)\\n\\n### 编辑器说明\\n知识库编辑器分两种，Markdown编辑器和富文本编辑器，默认是Markdown编辑器，推荐使用Markdown语法进行写作，[Markdown语法参考](http://www.markdown.cn/#overview)。\\n点击切换编辑器按钮可以切换为富文本编辑器，如下图所示。\\n\\n![file](/static/media/files/28/a9e78b3a-14b3-11e9-854f-0242ac120004.png?v=e43c2a3b4d4b8c6b50e58a5901edbc06)\\n\\n> 富文本编辑器和Markdown编辑器内容不互通，所以在编辑时不能切换，请注意。\\n> \\n> 在Markdown编辑器模式下，可以直接拖拽文件或者图片到编辑器实现上传并自动生成链接，富文本编辑器需要打开媒体库手动上传。\\n\\n#### Markdown编辑器工具栏说明\\n![file](/static/media/files/28/c054bd5c-14b8-11e9-854f-0242ac120004.png?v=fa9294b4069b011620ad3324a4b8efec)\\n\\n>1. 加粗\\n2. 斜体\\n3. 中划线\\n4. 标题\\n5. 引用\\n6. 代码块\\n7. 清除引用\\n8. 表格\\n9. 水平线\\n10. 无序列表\\n11. 有序列表\\n12. 链接\\n13. 图片\\n14. 预览\\n15. 全屏\\n16. 切换编辑器\\n\\n#### 富文本编辑器工具栏说明\\n![file](/static/media/files/28/297fc592-14b9-11e9-854f-0242ac120004.png?v=28f40d64c62d948dc7d4677a00d644f0)\\n\\n>1. 撤销\\n2. 重做\\n3. 字号\\n4. 行高\\n5. 字间距\\n6. 字体颜色\\n7. 加粗\\n8. 斜体\\n9. 下划线\\n10. 删除线\\n11. 上标\\n12. 下标\\n13. 清除样式\\n14. 表情符号\\n15. 增加缩进\\n16. 减少缩进\\n17. 居左对齐\\n18. 居中对齐\\n19. 居右对齐\\n20. 两端对齐\\n21. 标题\\n22. 无序列表\\n23. 有序列表\\n24. 引用\\n25. 代码\\n26. 媒体库\\n27. 链接\\n28. 删除链接\\n29. 水平线\\n30. 删除内容\\n31. 全屏\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-01-10 17:41:32\", \"author\": \"彭鹏\"}', 1, '2019-1-10 17:27:03');
INSERT INTO `t_projects` VALUES (360, 'knowledge.book', '8cc5014c-1551-11e9-a385-0242ac120004', 187, '{\"title\": \"架构设计\", \"blog\": \"###  概述\\n\\n### 架构总览\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-11 11:32:40\", \"author\": \"窦献策\"}', 1, '2019-1-11 11:32:40');
INSERT INTO `t_projects` VALUES (361, 'knowledge.book', 'bc0697cc-1551-11e9-a385-0242ac120004', 187, '{\"title\": \"版本规划\", \"blog\": \"#### 【数据平台实施里程碑计划-2019年1月】\\n\\n|序号| 子系统或模块 | 描述 | 里程碑 |  时间 | 备注|\\n|:---:| :--------|: -------- | :--------|  :--------: |\\n|1| 【新增】web插件/数据任务 | 提供基于agenda的可视化批量数据任务定时定点运行管理 |  实现任务管理、调度管理|2019.01.14 |  |\\n|2| 【更新】web插件/账户信息 | 提供用户与数据表的关系映射，用户账户充值等手工测试辅助实现| 提供账号推荐选取功能 |2019.01.14 |  |\\n|3| 【更新】web插件/通用数据 | 提供通用数据构造，用户账号、资产的可视化构造 | 重构发标审核步骤的优化| 2019.01.14|  |\\n|4| 【新增】数据api | 提供数据任务、账户信息、通用数据有关数据API的公开，并提供基于swagger-ui格式化的文档 | 实现数据API的公开和共享 | 2019.01.19|  |\\n|5| 【新增】提供优享牛数据构造相关适配 | 基于数据接口实现，提供测试数据辅助构造功能 | 提供优享牛有关的数据构造适配，如资产录入、发标、充值等 | 2019.02.29|  |\\n|5| 【更新】数据API构造性能优化 | 识别Top3性能问题，根据症结实施有针对性的局部重构 | 针对现有api实现有针对性的重构，解决批量性能瓶颈问题 | 2019.03.29|  |\\n\\n\\n### 1.【背景说明】\\n为了提高**测试数据集市**相关开发工作运作效率，增加透明度，由技术专项组统一汇集相关信息汇总于此。\\n\\n### 2.【版本规划】\\n\\n#### 2.1 本月拟发布功能（201901）  \\n\\n* 【新增】数据api(通用数据、账户信息、数据任务线管api)\\n* 【新增】数据任务 \\n* 【更新】账户信息\\n* 【更新】通用数据\\n\\n#### 2.2 历史发布记录  \\n\\n### 3. 【版本定义】  \\n#### 3.1 版本号定义  \\n版本号拟用 V1.2019MM.DD的格式。  \\n其中 MM为月度标记，如01，02，..., 12  \\n其中 DD为细分迭代标记(默认按周)，如01，02，..., 04  \\n#### 3.2 版本发布周期  \\n正式版本发布周期为 **每月一个版本**，倒数第二周的最后一个工作日，如 2019年01月25日  \\n#### 3.3 版本需求收集  \\n每月10日前完成需求收集和主要需求锁定  \\n\\n\\n\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-11 15:50:36\", \"author\": \"窦献策\"}', 1, '2019-1-11 11:34:00');
INSERT INTO `t_projects` VALUES (362, 'knowledge.book', '0e3377f4-17a0-11e9-ab37-0242ac120004', 221, '{\"title\": \"消息系统挡板列表\", \"blog\": \"### 短信渠道挡板地址\\n* 云信(短信加密发送)：http://172.20.20.160:9500/api/msg/yunxin/sendMsgByEncrypt\\n* 云信(语音验证码发送)：http://172.20.20.160:9500/api/msg/yunxin/SendVoiceCode\\n* 云信(个性化短信发送)：http://172.20.20.160:9500/api/msg/yunxin/IndividualSm\\n\\n-----\\n\\n* 玄武：http://172.20.20.160:9500/api/msg/xuanwu/massSend\\n* 玄武(群发)：http://172.20.20.160:9500/api/msg/xuanwu/mass\\n* 玄武(组发)：http://172.20.20.160:9500/api/msg/xuanwu/group\\n* 玄武(状态报告)：http://172.20.20.160:9500/api/msg/xuanwu/getreport\\n\\n-----\\n\\n* 云通信(语音验证码)：http://172.20.20.160:9500/api/msg/yuntongxin/voice\\n\\n-----\\n\\n* 梦网：http://172.20.20.160:9500/api/msg/mengw/singleSend\\n\\n-----\\n\\n* 川凌：http://172.20.20.160:9500/api/msg/chuanl/smsSend\\n* 川凌(状态报告)：http://172.20.20.160:9500/api/msg/chuanl/query\\n\\n### 异常测试说明\\n根据手机号后四位判断异常情况，具体如下表：\\n#### 云信 / 云信(语音验证码) / 云信(个性化短信发送)\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | -1     | 提交接口错误     |\\n| 0003     | -3     | 用户名或密码错误     |\\n| 0004     | -4     | 短信内容和备案的模板不一样     |\\n| 0005     | -5     | 签名不正确（格式为：  短信内容……【签名内容】）签名一定要放在短信最后     |\\n|0006|-6:keyWords|\\t含有关键字keyWords(keyWords为敏感内容，如：-6:促销)|\\n| 0007    |  -7     | 余额不足     |\\n| 0008     | -8     | 通道错误     |\\n| 0009     | -9     | 无效号码     |\\n| 0010     | -10     | 签名内容不符合长度     |\\n| 0011     | -11     | 用户有效期过期     |\\n| 0012     | -12     | 黑名单     |\\n| 0013     | -13     | 语音验证码的 Amount 参数必须是整形字符串     |\\n| 0014     | -14     | 语音验证码的内容只能为数字     |\\n| 0015     | -15     | 语音验证码的内容最长为 6 位      |\\n| 0016     | -16     | 余额请求过于频繁，5 秒才能取余额一次     |\\n| 0017     | -17     | 非法 IP     |\\n| 0023     | -23     | 解密失败     |\\n\\n#### 玄武\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | 1     | 消息过期     |\\n| 0002     | 2     | 下发失败     |\\n| 0003     | 3     | 拒绝接收     |\\n| 0004     | 4     | 未知错误     |\\n| 0005     | 5     | 消息被删除     |\\n\\n#### 玄武(新版)\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | -1     | 账号无效     |\\n| 0002     | -2     | 参数：无效     |\\n| 0003     | -3     | 连接不上服务器     |\\n| 0006     | -6     | 用户名密码错误     |\\n| 0007     | -7     | 旧密码不正确     |\\n| 0009     | -9     | 资金账户不存在     |\\n| 0011     | -11     | 包号码数量超过最大限制     |\\n| 0012     | -12     | 余额不足     |\\n| 0013     | -13     | 账号没有发送权限     |\\n| 0099     | -99    | 系统内部错误     |\\n| 0100     | -100     | 其它错误     |\\n| 0200     | -200     | 网络问题     |\\n\\n#### 云通信(语音验证码)\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | 9001     | 其他错误     |\\n| 0002     | 2001    | 无效的用户账号     |\\n| 0003     | 3005    | 不存在有效的应用     |\\n\\n#### 梦网\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | -100001     | 鉴权不通过,请检查账号,密码,时间戳,固定串,以及MD5算法是否按照文档要求进行设置     |\\n| 0002     | -100002    | 用户多次鉴权不通过,请检查账号,密码,时间戳,固定串,以及MD5算法是否按照文档要求进行设置     |\\n| 0003     | -100003    | 用户欠费     |\\n| 0004     | -100004    | custid或者exdata字段填写不合法     |\\n| 0011     | -100011    | 短信内容超长     |\\n|0012     | -100012    | 手机号码不合法     |\\n| 0014     | -100014    | 手机号码超过最大支持数量（1000）     |\\n| 0029     | -100029    | 端口绑定失败     |\\n| 0056     | -100056    | 用户账号登录的连接数超限     |\\n| 0057     | -100057    | 用户账号登录的IP错误     |\\n| 0126     | -100126    | 短信有效存活时间无效     |\\n| 0252     | -100252    | 业务类型不合法(超长或包含非字母数字字符)     |\\n| 0253     | -100253    | 自定义参数超长     |\\n| 0999     | -100999    | 平台数据库内部错误     |\\n\\n#### 川凌\\n| 手机号后四位 | 异常代码 | 异常说明 |\\n| -------- | -------- | -------- |\\n| 0001     | 1     | 用户名或密码不能为空     |\\n| 0002     | 2     | 发送内容包含sql注入字符     |\\n| 0003     | 3     | 用户名或密码错误     |\\n| 0004     | 4     | 短信号码不能为空     |\\n| 0005     | 5     | 短信内容不能为空     |\\n| 0006    | 6     | 包含非法字符     |\\n| 0007     | 7     | 对不起，您当前要发送的量大于您当前余额     |\\n| 0008     | 8     | 其他错误     |\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-06-27 18:17:14\", \"author\": \"彭鹏\"}', 1, '2019-1-14 09:59:41');
INSERT INTO `t_projects` VALUES (363, 'knowledge.book', 'a750ddf8-186a-11e9-a423-0242ac120004', 186, '{\"title\": \"测试环境查询\", \"blog\": \"### 1.0 鉴权接口\\n#### 1.0.0【推荐方案】\\n在业务API接口的Http请求headers中携带token，其中token值可以在测试管理平台中获取。  \\n获取地址：http://172.20.20.160:8090/account/settings/base  \\n#### 1.0.1 【备选方案】\\n##### 1.0.1.1 接口地址\\nhttp://172.20.20.160:8090/api/py/login\\n##### 1.0.1.2 请求方式\\nPOST\\n##### 1.0.1.3 请求参数\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| userName   |  登录账号  |\\n|2| password   |  登录密码  |\\n##### 1.0.1.4 响应格式\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| status   |  状态（SUCCESS 、FAIL） |\\n|2| message   |  响应描述  |\\n|3| data   |  响应数据对象  |\\n##### 1.0.1.5 应用示例\\n```JSON\\n{\\n\\t\\\"userName\\\":\\\"xiaoniu\\\",\\n\\t\\\"password\\\":\\\"123456\\\"\\n}\\n```\\n【通过认证提示消息】\\n```JSON\\n{\\n    \\\"status\\\": \\\"SUCCESS\\\",\\n    \\\"message\\\": \\\"\\\",\\n    \\\"data\\\": {\\n        \\\"authority\\\": \\\"user\\\"\\n    }\\n}\\n```\\n【未通过认证提示消息】\\n```JSON\\n{\\n    \\\"status\\\": \\\"FAIL\\\",\\n    \\\"message\\\": \\\"登录超时, 请重新登录!\\\",\\n    \\\"data\\\": {\\n        \\\"authority\\\": \\\"guest\\\"\\n    }\\n}\\n```\\n### 1.1 获取环境列表（基本）\\n#### 1.1.1 接口地址\\nhttp://172.20.20.160:8090/api/py/env/server/all\\n#### 1.1.2 请求方式\\nGET\\n#### 1.1.3 请求参数\\n**headers参数**\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| token   |  鉴权apiKey |\\n\\n**查询参数 **  \\n无\\n\\n#### 1.1.4 响应格式\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| status   |  状态（SUCCESS 、FAIL） |\\n|2| message   |  响应描述  |\\n|3| data   |  响应数据对象  |\\n\\n【以下data格式为上表中第3项】\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| data   |  数据列表 |\\n|2| total   |  数据总数  |\\n|3| page   |  页码  |\\n|3| size   |  每页最大记录数  |\\n\\n【以下data格式为上表中第1项】\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| key   |  key标识 |\\n|2| id   |  环境标识eid  |\\n|3| title   |  环境代号  |\\n|3| description   |  描述  |\\n#### 1.1.5 应用示例\\n【请求样例】  \\nGET http://172.20.20.160:8090/api/py/env/server/all  \\n【响应样例】\\n```JSON\\n{\\n    \\\"status\\\": \\\"SUCCESS\\\", \\n    \\\"message\\\": \\\"\\\", \\n    \\\"data\\\": {\\n        \\\"data\\\": [\\n            {\\n                \\\"key\\\": 183, \\n                \\\"id\\\": \\\"968f0764-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"移动测试环境_172.20.20.19*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 182, \\n                \\\"id\\\": \\\"916aecee-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"性能测试环境_172.20.20.11*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 181, \\n                \\\"id\\\": \\\"8b95c3a2-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.23*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 180, \\n                \\\"id\\\": \\\"851fac36-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.22*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 179, \\n                \\\"id\\\": \\\"7c9ce376-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.21*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 178, \\n                \\\"id\\\": \\\"76761404-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.20*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 177, \\n                \\\"id\\\": \\\"6f9d2668-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.18*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 176, \\n                \\\"id\\\": \\\"69a490ca-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.17*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 175, \\n                \\\"id\\\": \\\"640de0ee-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.16*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 174, \\n                \\\"id\\\": \\\"59b9298c-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.15*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 173, \\n                \\\"id\\\": \\\"5258870a-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.14*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 172, \\n                \\\"id\\\": \\\"4b90480e-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.13*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 171, \\n                \\\"id\\\": \\\"43e21cd6-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.12*\\\", \\n                \\\"description\\\": \\\"\\\"\\n            }, \\n            {\\n                \\\"key\\\": 169, \\n                \\\"id\\\": \\\"32b7677c-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"准生产测试环境-172.20.77.*\\\", \\n                \\\"description\\\": \\\"准生产测试环境\\\"\\n            }\\n        ], \\n        \\\"total\\\": 14, \\n        \\\"page\\\": 1, \\n        \\\"size\\\": 10\\n    }\\n}\\n\\n```\\n### 1.2 获取环境列表（扩展）\\n#### 1.2.1 接口地址\\nhttp://172.20.20.160:8090/api/py/env/server/list\\n#### 1.2.2 请求方式\\nGET\\n#### 1.2.3 请求参数\\n**headers参数**\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| token   |  鉴权apiKey |\\n\\n**查询参数 **\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| page   |  页码，默认值1 |\\n|2| size   |  单页最大记录数，默认值10  |\\n|3| keyWord   |  搜索关键词 ，默认值为 空串 |\\n|4| status   |  状态，如0、1  |\\n|5| type   |  类型，如OS、APPLICATION等  |\\n#### 1.2.4 响应格式\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| status   |  状态（SUCCESS 、FAIL） |\\n|2| message   |  响应描述  |\\n|3| data   |  响应数据对象  |\\n其它：略\\n#### 1.2.5 应用示例\\n【请求示例】\\nhttp://172.20.20.160:8090/api/py/env/server/list\\n【响应示例】\\n```JSON\\n{\\n    \\\"status\\\": \\\"SUCCESS\\\", \\n    \\\"message\\\": \\\"\\\", \\n    \\\"data\\\": {\\n        \\\"data\\\": [\\n            {\\n                \\\"no\\\": 1, \\n                \\\"key\\\": 183, \\n                \\\"eid\\\": \\\"968f0764-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"移动测试环境_172.20.20.19*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"朱沛玲\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 62, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"zhupeiling_1541470964005\\\"\\n            }, \\n            {\\n                \\\"no\\\": 2, \\n                \\\"key\\\": 182, \\n                \\\"eid\\\": \\\"916aecee-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"性能测试环境_172.20.20.11*\\\", \\n                \\\"type\\\": \\\"performance\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"瞿明峰\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 31, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"qumingfeng_1530252831123\\\"\\n            }, \\n            {\\n                \\\"no\\\": 3, \\n                \\\"key\\\": 181, \\n                \\\"eid\\\": \\\"8b95c3a2-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.23*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"张勇锋\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 42, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"zhangyongfeng1_1533126787523\\\"\\n            }, \\n            {\\n                \\\"no\\\": 4, \\n                \\\"key\\\": 180, \\n                \\\"eid\\\": \\\"851fac36-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.22*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"朱沛玲\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 62, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"zhupeiling_1541470964005\\\"\\n            }, \\n            {\\n                \\\"no\\\": 5, \\n                \\\"key\\\": 179, \\n                \\\"eid\\\": \\\"7c9ce376-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.21*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"谢绍斌\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 46, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"xieshaobin_1536918708913\\\"\\n            }, \\n            {\\n                \\\"no\\\": 6, \\n                \\\"key\\\": 178, \\n                \\\"eid\\\": \\\"76761404-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.20*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"张勇锋\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 42, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"zhangyongfeng1_1533126787523\\\"\\n            }, \\n            {\\n                \\\"no\\\": 7, \\n                \\\"key\\\": 177, \\n                \\\"eid\\\": \\\"6f9d2668-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.18*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"谢绍斌\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 46, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"xieshaobin_1536918708913\\\"\\n            }, \\n            {\\n                \\\"no\\\": 8, \\n                \\\"key\\\": 176, \\n                \\\"eid\\\": \\\"69a490ca-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.17*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"谢绍斌\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 46, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"xieshaobin_1536918708913\\\"\\n            }, \\n            {\\n                \\\"no\\\": 9, \\n                \\\"key\\\": 175, \\n                \\\"eid\\\": \\\"640de0ee-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.16*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"谢绍斌\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 46, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"xieshaobin_1536918708913\\\"\\n            }, \\n            {\\n                \\\"no\\\": 10, \\n                \\\"key\\\": 174, \\n                \\\"eid\\\": \\\"59b9298c-a6ba-11e8-bca3-0242ac120003\\\", \\n                \\\"title\\\": \\\"功能测试环境_172.20.20.15*\\\", \\n                \\\"type\\\": \\\"function\\\", \\n                \\\"description\\\": \\\"\\\", \\n                \\\"principal\\\": \\\"朱沛玲\\\", \\n                \\\"status\\\": 1, \\n                \\\"uid\\\": 62, \\n                \\\"dep\\\": 83, \\n                \\\"username\\\": \\\"zhupeiling_1541470964005\\\"\\n            }\\n        ], \\n        \\\"total\\\": 15, \\n        \\\"page\\\": 1, \\n        \\\"size\\\": 10\\n    }\\n}\\n```\\n### 1.3 获取环境详细信息（基本）\\n#### 1.3.1 接口地址\\nhttp://172.20.20.160:8090/api/py/env/detail/all\\n#### 1.3.2 请求方式\\nGET\\n#### 1.3.3 请求参数\\n**headers参数**\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| token   |  鉴权apiKey |\\n\\n**查询参数 **\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| eid   |  环境标识 |\\n#### 1.3.4 响应格式\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| status   |  状态（SUCCESS 、FAIL） |\\n|2| message   |  响应描述  |\\n|3| data   |  响应数据对象  |\\n其它：略\\n#### 1.3.5 应用示例\\n【请求示例】  \\nhttp://172.20.20.160:8090/api/py/env/detail/all?eid=76761404-a6ba-11e8-bca3-0242ac120003&type=OS\\n【响应示例】  \\n```JSON\\n{\\n    \\\"status\\\": \\\"SUCCESS\\\", \\n    \\\"message\\\": \\\"\\\", \\n    \\\"data\\\": {\\n        \\\"data\\\": [\\n            {\\n                \\\"key\\\": 1214, \\n                \\\"title\\\": \\\"172.20.20.201\\\", \\n                \\\"description\\\": \\\"Linux_前端NGINX\\\", \\n                \\\"id\\\": \\\"172.20.20.201\\\"\\n            }, \\n            {\\n                \\\"key\\\": 1215, \\n                \\\"title\\\": \\\"172.20.20.202\\\", \\n                \\\"description\\\": \\\"Linux_中层NGINX\\\", \\n                \\\"id\\\": \\\"172.20.20.202\\\"\\n            }, \\n            {\\n                \\\"key\\\": 1216, \\n                \\\"title\\\": \\\"172.20.20.204\\\", \\n                \\\"description\\\": \\\"Linux_WEB应用\\\", \\n                \\\"id\\\": \\\"172.20.20.204\\\"\\n            }, \\n            {\\n                \\\"key\\\": 1217, \\n                \\\"title\\\": \\\"172.20.20.205\\\", \\n                \\\"description\\\": \\\"Linux_APP应用\\\", \\n                \\\"id\\\": \\\"172.20.20.205\\\"\\n            }, \\n            {\\n                \\\"key\\\": 2232, \\n                \\\"title\\\": \\\"172.20.20.207\\\", \\n                \\\"description\\\": \\\"Middleware_中间件服务器1\\\", \\n                \\\"id\\\": \\\"172.20.20.207\\\"\\n            }, \\n            {\\n                \\\"key\\\": 2233, \\n                \\\"title\\\": \\\"172.20.20.208\\\", \\n                \\\"description\\\": \\\"Middleware_中间件服务器2\\\", \\n                \\\"id\\\": \\\"172.20.20.208\\\"\\n            }, \\n            {\\n                \\\"key\\\": 2234, \\n                \\\"title\\\": \\\"172.20.20.209\\\", \\n                \\\"description\\\": \\\"Middleware_中间件服务器3\\\", \\n                \\\"id\\\": \\\"172.20.20.209\\\"\\n            }\\n        ], \\n        \\\"total\\\": 9, \\n        \\\"page\\\": 1, \\n        \\\"size\\\": 10\\n    }\\n}\\n```\\n### 1.4 获取环境详细信息（扩展）\\n#### 1.4.1 接口地址\\nhttp://172.20.20.160:8090/api/py/env/detail/list\\n#### 1.4.2 请求方式\\nGET\\n#### 1.4.3 请求参数\\n**headers参数**\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| token   |  鉴权apiKey |\\n\\n**查询参数 **\\n\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| eid   |  环境标识 |\\n|2| page   |  页码，默认值1 |\\n|3| size   |  单页最大记录数，默认值10  |\\n|4| keyWord   |  搜索关键词 ，默认值为 空串 |\\n|5| status   |  状态，如0、1  |\\n|6| network   |    |\\n#### 1.4.4 响应格式\\n| 序号 | 名称 | 描述|\\n| -------- | -------- | -------- |\\n|1| status   |  状态（SUCCESS 、FAIL） |\\n|2| message   |  响应描述  |\\n|3| data   |  响应数据对象  |\\n其它：略\\n#### 1.4.5 应用示例\\n### 1.5 二次封装接口(数据平台)\\n[TM环境信息接口Swagger文档](http://172.20.20.160:8097/public/dist/index.html#/%E7%8E%AF%E5%A2%83%E4%BF%A1%E6%81%AF)\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-19 14:15:18\", \"author\": \"窦献策\"}', 1, '2019-1-15 10:09:56');
INSERT INTO `t_projects` VALUES (364, 'knowledge.book', '346dd7b4-1932-11e9-8e50-0242ac120004', 189, '{\"title\": \"新增投资红包发放失败补发任务\", \"blog\": \"背景：\\n\\n  线上有时投资使用了红包，未知原因导致投资成功了，红包发放却失败了【初步猜测有可能是内存溢出导致】。\\n\\t\\n  投资使用红包发放逻辑：投资成功后，发出红包发放通知到MQ队列中排队通知各相关系统进行发放操作。\\n\\t\\n  当前红包发放失败的操作是开发通过后台各种查然后再手动在后台操作发起红包发放，未了处理这个问题对系统进行优化，新增“投资mq补发任务”功能。\\n\\n\\n新功能处理逻辑：\\n\\t\\t\\t\\t新增一个表t_invest_msg_monitor记录投资及其红包的关系，红包的发放状态；新增“投资mq补发任务”（初步设定时间是两个小时触发一次，当前由于积分系统未做同步优化，加上出现的概率不是很高，所以上线后暂时处于暂停状态，需要触发时手动触发执行），该任务会查询t_invest_msg_monitor表中红包发放状态，如果发放状态为0，且是半个小时之前的记录，则重新发起红包发放请求，以完成投资红包发放失败补发的功能。\\n\\n\\n\\n测试注意事项:\\n\\n 1、只会对t_invest_msg_monitor表中status状态为0的记录的红包进行补发；\\n \\n 2、只会对t_invest_msg_monitor表中syncCreateTime时间为发起任务时的前半个小时记录的红包进行补发；\\n \\n 3、造出投资成功，红包发放不成功的数据：\\n \\n  （1）在使用红包购买最后提交前，把红包在t_redbag表中的state状态改成900（已过期）后，再提交投资；\\n\\t\\n  （2）把红包在t_redbag表中的state状态改成000（未发放）；\\n\\t\\n  （3）把t_invest_msg_monitor表中status状态改为0（未发放）；\\n\\t\\n  （4）把t_invest_msg_monitor表中syncCreateTime时间为发起任务时的前半个小时；\\n\\t 4、执行任务并检查相应结果：\\n\\t\\n  （1）触发“投资mq补发任务”；【也可以用接口跑 invoke com.neo.xnol.pcts.product.task.ProcuctBatchTask.replenishSendInvestMq(\\\"\\\")】\\n\\t\\n  （2）检查t_invest_msg_monitor表中status状态为1，t_redbag表中的state状态改成001（已发放）；\\n\\t\\n  （3）检查用户我的账户下的资金记录，已有红包补发记录，金额等数据正确。\\n\\t\\n\", \"uid\": 49, \"type\": \"md\", \"updateTime\": \"2019-01-16 10:02:21\", \"author\": \"卓声花\"}', 1, '2019-1-16 09:58:23');
INSERT INTO `t_projects` VALUES (365, 'knowledge.book', 'd30491dc-1933-11e9-8e50-0242ac120004', 189, '{\"title\": \"BE开发复投操作功能\", \"blog\": \"背景：当前复投每次都要涉及到很多部门，基本都是手工处理，操作风险也比较大，故开发一个直接可以在BE中操作复投的功能。\\n\\n功能要点：\\n\\n1、复投逻辑调整：原来复投的setTop值的意义调整为只匹配setTop值等于目标setTop值的债权。（原来是匹配大于等于目标setTop值的债权）；\\n\\n2、可通过setTop进行复投；\\n\\n3、可直接导入债权ID后直接复投；\\n\\n4、可在复投执行的过程中，中断复投操作；\\n\\n5、记录相关复投的数据，操作人，操作时间，匹配债权，匹配金额等。\\n\\n\\n注意：测试时需要回归原有的复投操作，特别是原来的setTop置顶债权复投流程（以防发生将全部站岗资金全部复投出去的风险）\\n\\n\\n新功能处理逻辑：新增一个表t_reinvest_operate记录复投操作的记录，新增操作复投的页面操作be->产品->复投管理->复投操作；可以\\\"根据SetTop值复投\\\"和\\\"指定债权ID复投\\\"进行操作复投操作；复投执行过程中，可以中断复投操作。\\n\\n\\n测试注意事项:\\n\\n 1、复投操作发起延迟30后才开始执行；\\n \\n 2、复投中断时，也存在一定的延迟；\\n \\n 3、复投中断后，在1分钟内无法再次发起复投，需要1分钟后才能再次发起复投；\\n \\n 4、\\\"指定债权ID复投\\\"每次指定的笔数（债权ID为8位时）大约在7000笔左右，多了会超出数据库存储最大长度，无法成功提交复投操作；\\n \\n\\n\\n复投涉及到的表：【重点检查 状态  金额相关的】\\n\\n-- 复投记录表\\n\\nSELECT * FROM t_reinvest;\\n\\nSELECT * FROM t_reinvest_item;\\n\\nSELECT * FROM t_reinvest_operate ;\\n\\n -- 站岗资金表\\n \\nSELECT * FROM t_stand_capital ;  \\n\\n-- 债权相关表\\n\\nSELECT * FROM t_loan;\\n\\nSELECT * FROM t_loan_credit;\\n\\n-- 产品相关表\\n\\nSELECT * FROM t_product;\\n\\nSELECT * FROM t_product_item;\\n\\nSELECT * FROM t_product_amount;\\n\\n-- 投资相关\\n\\nSELECT * FROM t_invest ;\\n\\nSELECT * FROM t_invest_item ;\\n\\nSELECT * FROM t_invest_refund_user_x  ;\\n\\nSELECT * FROM t_invest_refund_product_x  ;\\n\", \"uid\": 49, \"type\": \"md\", \"updateTime\": \"2019-01-16 10:10:59\", \"author\": \"卓声花\"}', 1, '2019-1-16 10:09:58');
INSERT INTO `t_projects` VALUES (367, 'knowledge.book', 'e6ef7d12-1a03-11e9-b4bc-0242ac120004', 191, '{\"title\": \"小牛在线短信服务通道挡板配置\", \"blog\": \"<p><span style=\\\"box-sizing: border-box;\\\"></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><span style=\\\"box-sizing: border-box; font-weight: bolder;\\\"><span style=\\\"box-sizing: border-box; color: #C0392B;\\\">1、同步数据库后修改短信通道配置</span><span style=\\\"box-sizing: border-box; color: #F32784;\\\">（修改数据库）</span></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">UPDATE xnmsg.`sms_channel_rule` SET channel_code = &#39;online_voice&#39; ,channle_name = &#39;online_voice&#39; WHERE msg_event_id IN(32,50,54,56,58,65,77,79,91);##配置语音短信通道</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">UPDATE xnmsg.`sms_channel_rule` SET channel_code = &#39;online&#39; ,channle_name = &#39;online&#39; WHERE msg_event_id NOT IN(32,50,54,56,58,65,77,79,91);##配置普通短信通道</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><br/></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><span style=\\\"box-sizing: border-box; font-weight: bolder;\\\"><span style=\\\"box-sizing: border-box; color: #C0392B;\\\">2、 配置短信通道的挡板地址</span><span style=\\\"box-sizing: border-box; color: #F32784;\\\">（修改数据库）</span></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">&nbsp;UPDATE&nbsp;`t_channel_account`&nbsp;SET&nbsp;parameters&nbsp;=&nbsp;&#39;{&quot;SEND_URL&quot;:&quot;http://172.20.20.160:9500/api/msg/mengw/singleSend&quot;,&quot;LOGIN_NAME&quot;:&quot;J90540&quot;,&quot;LOGIN_PASSWORD&quot;:&quot;365842&quot;}&#39;&nbsp;WHERE&nbsp;&nbsp;accountNo&nbsp;=&nbsp;&#39;2000003001&#39;;#梦网营销<br/><br/>UPDATE&nbsp;`t_channel_info`&nbsp;SET&nbsp;parameters&nbsp;=&nbsp;&#39;{&quot;SEND_URL&quot;:&quot;http://172.20.20.160:9500/api/msg/mengw/singleSend&quot;,&quot;PASSWORD_SALT&quot;:&quot;00000000&quot;}&#39;&nbsp;WHERE&nbsp;channelCode&nbsp;=&nbsp;&#39;2000003&#39;;#梦网验证码<br/><br/>UPDATE&nbsp;xnmsg.`t_channel_info`&nbsp;SET&nbsp;parameters&nbsp;=&nbsp;&#39;{&quot;SEND_URL&quot;:&nbsp;&quot;http://172.20.20.160:9500/api/msg/xuanwu/massSend&quot;,&quot;VOICE_SEND_URL&quot;:&nbsp;&quot;http://172.20.20.160:9500/api/msg/yuntongxin/voice&quot;}&#39;&nbsp;WHERE&nbsp;channelCode&nbsp;=&nbsp;&#39;2000001&#39;;##玄武科技&nbsp;<br/><br/>UPDATE&nbsp;xnmsg.`t_channel_info`&nbsp;SET&nbsp;parameters&nbsp;=&nbsp;&#39;{&quot;SEND_URL&quot;:&quot;http://172.20.20.160:9500/api/msg/yunxin/sendMsgByEncrypt&quot;,&quot;SEND_VOICE_URL&quot;:&quot;http://172.20.20.160:9500/api/msg/yunxin/SendVoiceCode&quot;}&#39;&nbsp;WHERE&nbsp;channelCode&nbsp;=&nbsp;&#39;2000002&#39;;##云信科技&nbsp;</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><br/></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><span style=\\\"box-sizing: border-box; font-weight: bolder;\\\"><span style=\\\"box-sizing: border-box; color: #C0392B;\\\">3、配置中心修改短信开关设为关闭</span><span style=\\\"box-sizing: border-box; color: #F32784;\\\">（配置中心修改）</span></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">设置sms.environment.dev = 1</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">备注：第2步如果设置成功是可以将短信通道打开的，为避免同步或设置失败，建议将这个开关关闭（关闭后，只会在sms_sendhis_his写记录，不会往t_msg_send_log里面写短信记录）。</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><br/></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><span style=\\\"box-sizing: border-box; font-weight: bolder;\\\"><span style=\\\"box-sizing: border-box; color: #C0392B;\\\">4、为非模板类的短信配置默认发送通道</span><span style=\\\"box-sizing: border-box; color: #F32784;\\\">（配置中心修改）</span></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">普通短信通道： sms.default.channel = online</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px; text-indent: 8em;\\\">sms.normal.channel = online</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">语音短信：sms.voice.channel = online_voice</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><br/></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><span style=\\\"box-sizing: border-box; font-weight: bolder;\\\"><span style=\\\"box-sizing: border-box; color: #C0392B;\\\">5、重试短信通道配置</span><span style=\\\"box-sizing: border-box; color: #F32784;\\\">（配置中心修改）</span></span></p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">sms.channel.backup1 = online</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\">sms.channel.backup1 = online</p><p style=\\\"box-sizing: border-box; margin-top: 8px; margin-bottom: 3px; line-height: 24px;\\\"><br/></p><p><br/></p><p><br/></p><footer><p><a title=\\\"blog\\\" target=\\\"_blank\\\" href=\\\"https://www.bstester.com/\\\" style=\\\"box-sizing: border-box; color: rgba(0, 0, 0, 0.45); text-decoration-line: none; background-color: transparent; outline: none; cursor: pointer; transition: all 0.3s ease 0s; touch-action: manipulation; margin-right: 40px;\\\"><span class=\\\"anticon\\\" style=\\\"box-sizing: border-box; display: inline-block; color: inherit; line-height: 0; vertical-align: -0.125em; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased;\\\"></span></a><a title=\\\"github\\\" target=\\\"_blank\\\" href=\\\"https://github.com/BSTester\\\" style=\\\"box-sizing: border-box; color: rgba(0, 0, 0, 0.45); text-decoration-line: none; background-color: transparent; outline: none; cursor: pointer; transition: all 0.3s ease 0s; touch-action: manipulation;\\\"><span class=\\\"anticon anticon-github\\\" style=\\\"box-sizing: border-box; display: inline-block; color: inherit; line-height: 0; vertical-align: -0.125em; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased;\\\"></span></a></p></footer><p><br/></p><p><br/></p>\", \"uid\": 57, \"type\": \"html\", \"updateTime\": \"2019-06-06 14:57:15\", \"author\": \"廖建花\"}', 1, '2019-1-17 10:59:27');
INSERT INTO `t_projects` VALUES (368, 'knowledge.book', 'a693f486-1df1-11e9-b2db-0242ac120004', 203, '{\"title\": \"Node开发环境搭建\", \"blog\": \"### 1 基础环境\\n#### 1.1 组件汇总\\n| 序号 | 名称 | 备注 |\\n| :--------: | -------- | -------- |\\n| 1    | nvm   | Node版本管理  |\\n| 2    | node/npm  | node环境/Node依赖库管理     |\\n| 3    | cnpm  | npm的国内扩展(阿里)，消化长城防火墙的余孽 |\\n| 4    | vscode | 微软维护的免费/开源的文本编辑器。山寨自atom,但青出于蓝而胜于蓝|\\n| 5    | webstorm | 可选。最NB的商业前端IDE，没有之一。|\\n    其它可选工具\\n    yarn: https://www.yarnpkg.com/zh-Hans/\\t\\t\\n#### 1.2 安装指导\\n#### 1.2.1 nvm的安装\\n```BASH\\n#linux/开源地址： https://github.com/creationix/nvm\\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\\n或\\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\\n\\n#windows/开源地址： https://github.com/coreybutler/nvm-windows\\n#绿色版本地址\\nhttps://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-noinstall.zip\\n#安装版本地址\\nhttps://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-setup.zip\\n```\\n参考：[安装node版本管理工具之NVM](https://www.jianshu.com/p/8671e439a811)\\n#### 1.2.2 node/npm/cnpm的安装(命令参考)\\n**使用nvm安装node**\\n```BASH\\n#查看可用的安装版本\\nnvm list available\\n#查看本地已安装版本\\nnvm list\\n#使用指定版本的nodejs\\nnvm use 版本号\\n#安装指定版本(建议选择最新的LTS版本)\\nnvm install <version>\\n```\\n**使用npm安装cnpm**\\n```BASH\\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\\n```\\n#### 1.2.3 vscode\\n软件官网：https://code.visualstudio.com/\\n\\n#### 1.2.4 webstorm\\n官网地址：https://www.jetbrains.com/webstorm/  \\n建议安装Toolbox App：https://www.jetbrains.com/toolbox/app/  \\n备注：商业软件，可选择试用。\\n### 2 应用环境\\n#### 2.1 dvajs\\n官网地址：https://dvajs.com\\n```\\n# https://dvajs.com/\\n# 安装dva工具框架\\nnpm install dva-cli -g\\n```\\n\\n快速上手：https://dvajs.com/guide/getting-started.html#%E5%AE%89%E8%A3%85-dva-cli\\n#### 2.2 antd\\n官网地址：https://ant.design/index-cn\\n```\\n# 安装到当前工程(保存到package.json)\\nnpm install antd --save\\n```\\n#### 2.3 eggjs\\n官网地址：https://eggjs.org/zh-cn/\\n```\\n# 安装eggjs工具框架\\nnpm i egg-init -g\\n# 创建的demo工程\\negg-init egg-example --type=simple\\n```\\n\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-22 11:40:53\", \"author\": \"窦献策\"}', 1, '2019-1-22 10:58:53');
INSERT INTO `t_projects` VALUES (369, 'knowledge.book', '8b8d7674-1df8-11e9-88c0-0242ac120004', 193, '{\"title\": \"业界资源汇总（参考阅读）\", \"blog\": \"腾讯的专项测试之道：https://cloud.tencent.com/developer/article/1005945\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-22 11:48:14\", \"author\": \"窦献策\"}', 1, '2019-1-22 11:48:14');
INSERT INTO `t_projects` VALUES (370, 'knowledge.book', 'a17e6fa4-1e0e-11e9-88c0-0242ac120004', 186, '{\"title\": \"测试数据集市公开接口\", \"blog\": \"[SwaggerUI/动态接口文档](http://172.20.20.160:8097/public/dist/index.html?urls.primaryName=%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E9%9B%86%E5%B8%82%EF%BC%88%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%E6%8E%A5%E5%8F%A3%EF%BC%89#/)\\n### 1.基础数据\\n#### 1.1 获取随机用户信息\\n##### 1.1.1 接口地址\\n172.20.20.160:8097/api/tm/getManyUserData\\n##### 1.1.2 请求方式\\nGET\\n##### 1.1.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|count | 数目  | 计划获取的用户信息数目   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 1.1.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 1.1.5 应用示例\\n【请求样例】\\n```\\nhttp://172.20.20.160:8097/api/tm/getManyUserData?count=1&bizId=APIDebug\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"成功\\\",\\n  \\\"result\\\": [\\n    {\\n      \\\"age\\\": 48,\\n      \\\"bank_card\\\": \\\"6214832934422280\\\",\\n      \\\"bank_name\\\": \\\"招商银行股份有限公司北京分行 \\\",\\n      \\\"birthday\\\": \\\"1970-11-27\\\",\\n      \\\"email\\\": \\\"pgdawknxvuji@cugxn.org\\\",\\n      \\\"id_card\\\": \\\"310488197011274840\\\",\\n      \\\"key\\\": 0,\\n      \\\"mobile\\\": \\\"17199403178\\\",\\n      \\\"mobile_operators\\\": \\\"中国联通*虚拟运营商\\\",\\n      \\\"moible_addr\\\": \\\"\\\",\\n      \\\"name\\\": \\\"屠亲滑\\\",\\n      \\\"name_pinyin\\\": \\\"tú qīn huá\\\",\\n      \\\"origin\\\": \\\"上海市\\\",\\n      \\\"sex\\\": \\\"女\\\"\\n    }\\n  ],\\n  \\\"data\\\": [\\n    {\\n      \\\"bizId\\\": \\\"APIDebug\\\",\\n      \\\"logId\\\": \\\"5c46bee9cf2b3b0040af3f3a\\\"\\n    }\\n  ]\\n}\\n```\\n### 2.测试开关\\n#### 2.1 官网验证码测试开关\\n##### 2.1.1 接口地址\\n172.20.20.160:8097/api/tm/openCodeSwitch\\n##### 2.1.2 请求方式\\nGET\\n##### 2.1.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|host | Linux_WEB应用主机地址Ip  | 如172.20.20.114   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 2.1.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 2.1.5 应用示例\\n【请求样例】\\n```\\ncurl -X POST \\\"http://172.20.20.160:8097/api/tm/openCodeSwitch?host=172.20.20.114&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"执行成功, 请等待应用重启完成\\\",\\n  \\\"result\\\": [\\n    true\\n  ],\\n  \\\"data\\\": [\\n    {\\n      \\\"bizId\\\": \\\"APIDebug\\\",\\n      \\\"logId\\\": \\\"5c46c19bcf2b3b0040af3f3b\\\"\\n    }\\n  ]\\n}\\n```\\n#### 2.2 BE验证码测试开关\\n##### 2.2.1 接口地址\\n172.20.20.160:8097/api/tm/beCodeSwitch\\n##### 2.2.2 请求方式\\nGET\\n##### 2.2.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|host | Linux_WEB应用主机地址Ip  | 如172.20.20.114   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 2.2.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 2.2.5 应用示例\\n【请求样例】\\n```\\ncurl -X POST \\\"http://172.20.20.160:8097/api/tm/beCodeSwitch?host=172.20.20.114&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"执行成功, 请等待应用重启完成\\\",\\n  \\\"result\\\": [\\n    true\\n  ],\\n  \\\"data\\\": [\\n    {\\n      \\\"bizId\\\": \\\"APIDebug\\\",\\n      \\\"logId\\\": \\\"5c46c1f0cf2b3b0040af3f3c\\\"\\n    }\\n  ]\\n}\\n```\\n#### 2.3 BE管理权限测试开关\\n##### 2.3.1 接口地址\\n172.20.20.160:8097/api/tm/beAdminSwitch\\n##### 2.3.2 请求方式\\nPOST\\n##### 2.3.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|host | Linux_WEB应用主机地址Ip  | 如172.20.20.114   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 2.3.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 2.3.5 应用示例\\n【请求样例】\\n```\\ncurl -X POST \\\"http://172.20.20.160:8097/api/tm/beAdminSwitch?host=172.20.20.114&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"SUCCESS\\\",\\n  \\\"result\\\": [\\n    {\\n      \\\"result\\\": true\\n    }\\n  ],\\n  \\\"data\\\": [\\n    {\\n      \\\"bizId\\\": \\\"APIDebug\\\",\\n      \\\"logId\\\": \\\"5c46c275cf2b3b0040af3f3d\\\"\\n    }\\n  ]\\n}\\n```\\n### 3.业务加密\\n#### 3.1 加密手机号、邮箱、姓名\\n##### 3.1.1 接口地址\\n172.20.20.160:8097/api/tm/encryptData\\n##### 3.1.2 请求方式\\nGET\\n##### 3.1.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|data | 手机号、邮箱、姓名其中之一  | 待加密的数据字符串   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 3.1.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 3.1.5 应用示例\\n【请求样例】\\n```\\ncurl -X GET \\\"http://172.20.20.160:8097/api/tm/encryptData?data=19998997090&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"SUCCESS\\\",\\n  \\\"result\\\": \\\"T56dIOaTuAWUmhSzr9Zi1HQ==\\\",\\n  \\\"data\\\": []\\n}\\n```\\n#### 3.2 加密身份证号\\n##### 3.2.1 接口地址\\n172.20.20.160:8097/api/tm/encryptIdNo\\n##### 3.2.2 请求方式\\nGET\\n##### 3.2.3 请求参数\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|idCardNo | 身份证号  | 待加密的身份证号字符串   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n##### 3.2.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 3.2.5 应用示例\\n【请求样例】\\n```\\ncurl -X GET \\\"http://172.20.20.160:8097/api/tm/encryptIdNo?idCardNo=362120197212182616&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"SUCCESS\\\",\\n  \\\"result\\\": \\\"EMnV5lVoNr2vNFUYe+pZ3eqGbxMOJgkrxJ4gcbnqfRNA=\\\",\\n  \\\"data\\\": []\\n}\\n```\\n#### 3.3 加密登录密码\\n##### 3.3.1 接口地址\\n172.20.20.160:8097/api/tm/encryptPassword\\n##### 3.3.2 请求方式\\nGET\\n##### 3.3.3 请求参数\\n\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|password | 密码  | 待加密的密码字符串   |\\n| 2|bizId | 业务Id  | 保留字段，后续用来跟踪日志链。默认值:APIDebug   |\\n\\n##### 3.3.4 响应格式\\n| 序号|参数 | 名称 | 描述 |\\n| :--------:| :-------- | -------- | -------- |\\n| 1|code | 响应码  | 0成功，其它值为错误码   |\\n| 2|message | 响应提示消息  |  |\\n| 3|result | 响应结果  |    |\\n| 4|data | 附加信息  |   |\\n##### 3.3.5 应用示例\\n【请求样例】  \\n```\\ncurl -X GET \\\"http://172.20.20.160:8097/api/tm/encryptPassword?password=123456&bizId=APIDebug\\\" -H \\\"accept: application/json\\\"\\n```\\n【响应样例】  \\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"message\\\": \\\"SUCCESS\\\",\\n  \\\"result\\\": \\\"ac44550f8b18b0d6f305a7859f3676a100a806a188ffddf46a27bd52bbcdf6e5bb7041b17f5f594bc1e02372eface332ba8f7667cbbbc53570708f55932fec40b826626b3c962f03f744bad4e4b2ab87902b3325c3f8155c2b98b44efc30525045963dbfe6f14241050a21f82124a5cb20661061e7bb2981332502d9943e65f4\\\",\\n  \\\"data\\\": []\\n}\\n```\\n### 4. 流程数据\\n#### 4.1 注册、绑卡\\n##### 4.1.1 接口地址\\nhttp://172.20.20.160:8090/api/pydata/plugin/user_data?act=register-all&host=172.20.20.141\\n备注：其中172.20.20.141为环境的入口IP地址\\n##### 4.1.2 请求方式\\nPOST\\n##### 4.1.3 请求参数\\n\\n##### 4.1.4 响应格式\\n\\n##### 4.1.5 应用示例\\n【请求样例】  \\n```\\nPOST http://172.20.20.160:8090/api/pydata/plugin/user_data?act=register-all&host=172.20.20.141\\nBody\\n{\\n    \\\"type\\\": [\\\"register\\\", \\\"real\\\"],\\n    \\\"mobile\\\": \\\"\\\",\\n    \\\"password\\\": \\\"t1234567\\\",\\n    \\\"password_enc\\\": \\\"\\\",\\n    \\\"jy_password\\\": \\\"123456\\\",\\n    \\\"planner\\\": \\\"\\\",\\n    \\\"market\\\": \\\"0\\\",\\n    \\\"amount\\\": \\\"5000.00\\\",\\n    \\\"count\\\": \\\"1\\\",\\n    \\\"op\\\": \\\"user_data\\\",\\n    \\\"host\\\": \\\"172.20.20.141\\\",\\n    \\\"act\\\": \\\"register-all\\\",\\n    \\\"client_id\\\":0\\n}\\n\\n```\\n【响应样例】  count的值为1\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"data\\\": [\\n    true\\n  ],\\n  \\\"message\\\": \\\"用户数据构造成功 1 个, [(\'手机号 18369465629\', \'成功充值 0\', \'银行卡号 6227002041689215154\', \'身份证号 652699197506068504\')], 密码 t1234567\\\",\\n  \\\"result\\\": null\\n}\\n```\\n【响应样例】  count的值为3\\n```\\n{\\n  \\\"code\\\": 0,\\n  \\\"data\\\": [\\n    true\\n  ],\\n  \\\"message\\\": \\\"用户数据构造成功 3 个, [(\'手机号 18887183970\', \'成功充值 0\', \'银行卡号 6227001915345068620\', \'身份证号 342848198602182879\'), (\'手机号 15685345156\', \'成功充值 0\', \'银行卡号 6222022724732264775\', \'身份证号 537815199509283840\'), (\'手机号 17024535015\', \'成功充值 0\', \'银行卡号 6227000624562101244\', \'身份证号 131853197209241795\')], 密码 t1234567\\\",\\n  \\\"result\\\": null\\n}\\n```\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-02-20 15:59:55\", \"author\": \"窦献策\"}', 1, '2019-1-22 14:26:19');
INSERT INTO `t_projects` VALUES (371, 'knowledge.book', '4825b8b2-1eb4-11e9-85b9-0242ac120004', 189, '{\"title\": \"产品交易短信集合\", \"blog\": \"![file](/static/media/files/59/39596040-1eb4-11e9-85b9-0242ac120004.png?v=153680e921f0b4ee2620f68de7cd7502)\", \"uid\": 59, \"type\": \"md\", \"updateTime\": \"2019-01-23 10:12:06\", \"author\": \"张用辉\"}', 1, '2019-1-23 10:12:06');
INSERT INTO `t_projects` VALUES (372, 'knowledge.book', '60c895c8-1f82-11e9-90cc-0242ac120004', 189, '{\"title\": \"新增投资下债权流标复投定时任务\", \"blog\": \"背景：\\n  线上投资工具标匹配债权未满标流标，导致工具标下面没有匹配上任何债权，用户在我的网贷查询工具标详情小没有看到匹配任何债权【用户体验不好】。\\n  为了改善用户体验，新增“投资下债权流标复投定时任务”功能。\\n新功能处理逻辑：新增“投资下债权流标复投定时任务”（初步设定时间是凌晨4-5点每个小时触发一次，上线后即可执行），该任务会查询近10天投资了工具标，并且该工具标匹配到的债权已流标状态的数据，然后对这些数据站岗资金优先进行债权匹配功能。\\n测试注意事项:\\n 1、只会对工具标下匹配到的所有债权都流标的数据进行处理，如果有部分债权没有流标，不做处理；\\n 2、只会对满足以下条件的数据进行处理：\\nSELECT * FROM t_invest i\\nWHERE i.status = 20\\n<if test=\\\"startTime != null\\\">\\nAND i.createTime &gt; #{startTime}\\n</if>\\nAND (SELECT count(1) AS num FROM t_invest_item ii WHERE ii.investId = i.id and ii.status &lt; 90) = 0 \\n\", \"uid\": 49, \"type\": \"md\", \"updateTime\": \"2019-01-24 10:47:24\", \"author\": \"卓声花\"}', 1, '2019-1-24 10:47:24');
INSERT INTO `t_projects` VALUES (373, 'knowledge.book', 'ffc96948-1fa7-11e9-90cc-0242ac120004', 193, '{\"title\": \"代码片段\", \"blog\": \"### sql数据模板\\n\\n#### 基本类型\\n| 序号 | 值|类型 | 说明 |\\n| -------- | -------- | -------- |\\n| 1 | null|Object.prototype.toString.call(null)    |  \\\\[object Null]  |\\n| 2 | undefined|Object.prototype.toString.call(undefined)    |  \\\\[object Undefined]  |\\n| 3 | \\\"abc\\\"|Object.prototype.toString.call(\\\"abc\\\")    |  \\\\[object String]  |\\n| 4 | 123|Object.prototype.toString.call(123)    |  \\\\[object Number]  |\\n| 5 | true|Object.prototype.toString.call(true)    |  \\\\[object Boolean]  |\\n#### 引用类型\\n```NodeJs\\n**函数类型**\\nFunction fn(){\\n  console.log(“test”);\\n}\\nObject.prototype.toString.call(fn); // \\\"[object Function]\\\"\\n```\\n```\\n**日期类型**\\nvar date = new Date();\\nObject.prototype.toString.call(date); // \\\"[object Date]\\\"\\n```\\n```\\n**数组类型**\\nvar arr = [1,2,3];\\nObject.prototype.toString.call(arr); // \\\"[object Array]\\\"\\n```\\n```\\n**正则表达式**\\nvar reg = /[hbc]at/gi;\\nObject.prototype.toString.call(reg); // \\\"[object RegExp]\\\"\\n```\\n```\\n**自定义类型**\\nfunction Person(name, age) {\\n    this.name = name;\\n    this.age = age;\\n}\\nvar person = new Person(\\\"Rose\\\", 18);\\nObject.prototype.toString.call(arr); // \\\"[object Object]\\\"\\n```\\n\\n```Node\\n# 参数替换\\n# 支持number、string\\n```\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-01-24 16:09:18\", \"author\": \"窦献策\"}', 1, '2019-1-24 15:16:42');
INSERT INTO `t_projects` VALUES (375, 'knowledge.book', '89826e64-2ff2-11e9-a7b6-0242ac120004', 187, '{\"title\": \"实时信息网关架构\", \"blog\": \"### 1.背景介绍\\n**实时信息网关（Messaging Gateway）**   \\n    最典型的应用是即时通讯（如QQ、微信）、消息推送（通知）、 过程监控（实时日志、告警提示）等。\\n**应用需求分类**  \\nA. **即时通讯**   \\n        主要要求可靠，考核送达率。要是你发一条短信，结果丢了，对方没收到！你再也不相信短信了吧。  \\nB. **实时通信**  \\n    主要要求低延时和接通率。  \\n* 低延时  \\n\\t\\t你打一通电话，每说一句话，对方得几秒钟才有回应，这电话你也讲不下去了吧。  \\t\\t\\n* 接通率  \\n    你打电话，你这边听到接通了，实际上对方的手机毫无反应，这实际上就没接通。这跟短信没送到，造成的恶劣影响是一样的。\\n### 2.功能说明\\nHOST_BASE=http://172.20.17.136:7001\\n#### 2.0 接口查询/帮助服务 \\n命名空间(Namespace)：${HOST_BASE}/help  \\n#### 2.1 实时通知服务\\n命名空间(Namespace)：${HOST_BASE}/notice  \\n**流程说明  **  \\nstep1: 【客户端登记】客户端与实时通知服务建立连接，即表示完成登记。由于无法识别身份，此时只可以接收广播通知和单点匿名通知。如连接中携带有效token，则相当于同时完成第二步操作。  \\nstep2: 【客户端Login】客户端携带用户标识（用户名、密码），发送login消息成功后，可以接收单点精确通知（按用户标识）。  \\nstep3: 【客户端Logout】客户端发送logout消息成功后，此时只可以接收广播通知和单点匿名通知。  \\nstep4: 【客户端退出】客户端与实时通知服务断开连接，此时无法接收任何通知消息。  \\n**消息格式说明  **  \\n客户端需要监听notice事件以获取通知消息。格式为JSON格式。\\n\\n#### 2.2 实时日志服务\\n命名空间(Namespace)：${HOST_BASE}/logServer\\n#### 2.3 实时协作服务\\n命名空间(Namespace)：${HOST_BASE}/chat\\n### 3 样例工程\\n#### 3.0 功能需求\\n* 需求1：支持可选的命令行启动参数 -s, --socket, 设置/选择实时服务命名空间\\n* 需求2：支持可选的命令行启动参数 -f, --save, 决定是否保存默认命名空间用于连续的命令发送\\n* 需求3：若启动参数为空，支持交互选择设置/选择实时服务命名空间，支持交互选择是否保存默认命名空间用于连续的命令发送\\n* 需求4：支持交互输入调试命令(包括命令类型的选择，命令参数设置)\\n* 需求5：支持响应消息的分类收取和输出（含请求响应，广播消息，同步消息等）\\n#### 3.1 Node版本命令行客户端\\n依赖包：commander、inquirer，socket.io-client  \\n参考资源：  \\nhttps://blog.csdn.net/qq_26733915/article/details/80461257  \\n#### 3.2 Python版本命令行客户端\\n依赖库：inquirer(类unix支持)，python-socketio  \\n参考资源：  \\nhttps://pypi.org/project/inquirer/  \\nhttps://python-socketio.readthedocs.io/en/latest/intro.html  \\n#### 3.3 Java版本命令行客户端\\n依赖包：commons-cli，socket.io-client\\n参考资源：  \\nhttps://github.com/socketio/socket.io-client-java  \\nhttps://my.oschina.net/u/875122/blog/1794992  \\n#### 3.3 浏览器版本客户端\\n依赖包：socket.io-client  \\n参考资源：  \", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-02-16 11:55:00\", \"author\": \"窦献策\"}', 1, '2019-2-14 08:50:34');
INSERT INTO `t_projects` VALUES (376, 'knowledge.book', 'b150a3ac-2ff2-11e9-a7b6-0242ac120004', 187, '{\"title\": \"API网关架构\", \"blog\": \"### 1.背景介绍\\nAPI全称是应用程序接口（Application Programming Interface），简单来讲，就是通过它，程序与其他程序之间，可以交换数据，下达指令。  \\n随着测试开发技能的普及和测试工具需求的多样化，为了实现测试效率的提升和效果的进一步改进，整个业务测试对已有经验的整合诉求增加。  \\n整合现有积累的资源，提供一套能快速响应新需求的API网关服务势在必行。\\n### 2.功能说明\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-02-18 10:42:45\", \"author\": \"窦献策\"}', 1, '2019-2-14 08:51:41');
INSERT INTO `t_projects` VALUES (385, 'knowledge.book', '376baff4-3967-11e9-87a7-0242ac120002', 221, '{\"title\": \"宝付协议支付测试桩\", \"blog\": \"### 1.基础配置\\n挡板地址：http://172.20.20.160:8092/api/cutpayment/protocol/backTransRequest\\n配置说明：\\n原始配置(使用宝付提供的联调环境)\\n```\\n <!-- 协议支付 -->\\n    <protocol-pay version=\\\"4.0.0.0\\\"  memberId=\\\"100025773\\\" terminalId=\\\"200001173\\\"\\n                  keyStorePath=\\\"/usr/local/config/fopay/cer/bfkey_100025773@@200001173.pfx\\\"\\n                  keyStorePassword=\\\"100025773_286941\\\" aesKey=\\\"1e69513c4fg6415f\\\"\\n                  pubKey=\\\"/usr/local/config/fopay/cer/bfkey_100025773@@200001173.cer\\\"\\n                  callbackUrl=\\\"https://www.xiaoniu88.com/payment-callback/baofoo/protocol/pay/notify\\\"\\n                  url=\\\"https://vgw.baofoo.com/cutpayment/protocol/backTransRequest\\\">\\n    </protocol-pay>\\n```\\n使用测试桩\\n```\\n# 需要改动的地方\\n url=\\\"https://vgw.baofoo.com/cutpayment/protocol/backTransRequest\\\"             #修改前\\n url=\\\"http://172.20.20.160:8092/api/cutpayment/protocol/backTransRequest\\\"    #修改后\\n```\\n### 2.功能说明\\n#### 2.1 返回值说明\\n##### 2.1.1 预绑卡\\n| 序号 | 卡后开头 | 应答码/含义 |业务返回码/业务返回说明 |\\n| -------- | -------- | -------- |-------- |\\n| 1     |  6226900  |  S/成功  | 0000/交易成功 |\\n| 2     |  6226901  |  F/失败  | 随机 |\\n| 3     |  6226902  |  I/处理中  | 随机 |\\n| 4     |  6226903  | S/成功  |  BF00436/交易类型不存在|\\n\\n##### 2.1.2 确认绑卡(2.2.2)\\n| 序号 | 卡后开头 | 应答码/含义 |业务返回码/业务返回说明 |\\n| -------- | -------- | -------- |-------- |\\n| 1     |  6226900  |  S/成功  | 0000/交易成功 |\\n| 2     |  6226901  |  F/失败  | 随机 |\\n| 3     |  6226902  |  I/处理中  | 随机 |\\n| 4     |  6226903  | S/成功  |  BF00436/交易类型不存在|\\n##### 2.1.3 直接支付类交易\\n| 序号 | 卡后开头 | 应答码/含义 |业务返回码/业务返回说明 |\\n| -------- | -------- | -------- |-------- |\\n| 1     |  6226900  |  S/成功  | 0000/交易成功 |\\n| 2     |  6226901  |  F/失败  | 随机 |\\n| 3     |  6226902  |  I/处理中  | 随机 |\\n| 4     |  6226903  | S/成功  |  BF00436/交易类型不存在|\\n\\n##### 2.1.4 其它  \\n | 序号 | 卡后开头 | 应答码/含义 |业务返回码/业务返回说明 |  \\n| -------- | -------- | -------- |-------- |\\n| 1     |  6222020  |  S/成功  | 0000/交易成功 |  \\n\\n#### 2.2 交易类型说明\\n| 序号（数据库Id） | 交易类型(txn_type) | 说明 |接口文档 |\\n| -------- | -------- | -------- |-------- |\\n| 1     |  01     |  预绑卡 | 2.2.1 |\\n| 2     |  02     |  确认绑卡 | 2.2.2|\\n| 3     |  08     |  直接支付类交易 | 2.2.3 |\\n| 4     |  04     |  解除银行卡绑定 | 2.2.6 |\\n| 5     |  03     | 绑定结果查询  | 2.2.7 |\\n| 6     |  07     |  支付结果查询类交易 | 2.2.8|\\n#### 2.3 请求字段说明\\n```\\npublic String send_time; // 01; 02; 08; 04; 03; 07;\\npublic String msg_id; // 01; 02; 08; 04; 03; 07;\\npublic String version; // 01; 02; 08; 04; 03; 07;\\npublic String terminal_id; // 01; 02; 08; 04; 03; 07;\\npublic String txn_type; // 01; 02; 08; 04; 03; 07;\\npublic String member_id; // 01; 02; 08; 04; 03; 07;\\npublic String trans_id;  // 08;\\npublic String dgtl_envlp; // 01; 02; 08; 04; 03;\\npublic String user_id; // 01; 08; 04; 03;\\npublic String card_type; // 01;\\npublic String id_card_type; // 01;\\npublic String acc_no; //  03;\\npublic String acc_info; // 01;\\npublic String unique_code; //  02;\\npublic String protocol_no; //  08; 04;\\npublic String txn_amt; //  08;\\npublic String card_info; //  08;\\npublic String risk_item; //  08;\\npublic String return_url; //  08;\\npublic String orig_trans_id;  // 07;\\npublic String orig_trans_idate;  // 07;\\npublic String req_reserved1; // 01; 02; 08; 04; 03; 07;\\npublic String req_reserved2; // 01; 02; 08; 04; 03; 07;\\npublic String additional_info1; // 01; 02; 08; 04; 03; 07;\\npublic String additional_info2; // 01; 02; 08; 04; 03; 07;\\npublic String signature; // 01;  02; 08; 04; 03; 07;\\n```\\n#### 2.4 响应字段说明\\n```\\npublic String send_time; // 01; 02; 08; 04; 03; 07;\\npublic String msg_id; // 01; 02; 08; 04; 03; 07;\\npublic String version; // 01; 02; 08; 04; 03; 07;\\npublic String resp_code; // 01; 02; 08; 04; 03; 07;\\npublic String terminal_id; // 01; 02; 08; 04; 03; 07;\\npublic String txn_type; // 01; 02; 08; 04; 03; 07;\\npublic String member_id; // 01; 02; 08; 04; 03; 07;\\npublic String biz_resp_code; // 01; 02; 08; 04; 03; 07;\\npublic String biz_resp_msg; // 01; 02; 08; 04; 03; 07;\\npublic String unique_code; // 01;\\npublic String protocol_no; // 02;\\npublic String bank_code; // 02;\\npublic String bank_name; // 02;\\npublic String dgtl_envlp; // 01; 02; 03;\\npublic String succ_amt; // 08; 07;\\npublic String succ_time; // 08; 07;\\npublic String order_id; // 08; 07;\\npublic String trans_id; // 08; 07;\\npublic String req_reserved1; // 01; 02; 08; 04; 03; 07;\\npublic String req_reserved2; // 01; 02; 08; 04; 03; 07;\\npublic String additional_info1; // 01; 02; 08; 04; 03; 07;\\npublic String additional_info2; // 01; 02; 08; 04; 03; 07;\\npublic String signature; // 01; 02; 08; 04; 03; 07;\\npublic String protocols; // 03;\\n```\\n### 3.返回值自定义\\n【接口响应取值规则】  \\n1. 如果请求中含有响应字段，会从请求中取值。  \\n2. 如果数据库（172.20.20.160:3306/xiaoniu_test）的t_baofu_protocol表中对应的txn_type对应的响应(response字段的json串)中有值则替换上述值。  \\n3. 自动计算signature字段的值。\\n【接口响应值修改】\\n```\\n# host: 172.20.20.160\\n# port: 3306\\n# db: xiaoniu_test\\n# table: t_baofu_protocol\\n# user: test  passord: test1234\\n\\n# 查询\\nSELECT * FROM xiaoniu_test.t_baofu_protocol;\\n\\n# 修改txn_type=01的返回值biz_resp_code为 “0000”\\nUPDATE `xiaoniu_test`.`t_baofu_protocol` SET `response` = \'{\\\\\\\"biz_resp_code\\\\\\\": \\\\\\\"0000\\\\\\\"}\' WHERE (`id` = \'1\');\\n\\n# 修改txn_type=01的返回值biz_resp_code为 “0000”，msg_id为1000\\nUPDATE `xiaoniu_test`.`t_baofu_protocol` SET `response` = \'{\\\\\\\"biz_resp_code\\\\\\\": \\\\\\\"0000\\\\\\\"，\\\\“msg_id\\\\”：\\\\“1000\\\\”}\' WHERE (`id` = \'1\');\\n```\\n【服务日志查看】\\n```\\n# 登录172.20.20.160\\ntail -f /data/ace/stub_baofu_protocol/log*\\n```\\n### 4.手动调试支持\\nhttp://172.20.20.160:8092/swagger-ui.html#/bao-fu/backTransRequestUsingGET\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-03-04 09:20:27\", \"author\": \"窦献策\"}', 1, '2019-2-26 09:38:28');
INSERT INTO `t_projects` VALUES (388, 'knowledge.book', '9be4a35e-3a30-11e9-9d26-0242ac120002', 221, '{\"title\": \"快钱协议支付挡板\", \"blog\": \"### 快钱协议支付挡板\\n**签约申请:**\\nhttp://172.20.20.160:9500/api/payment/bill99/ind_auth\\n\\n**签约短信验证:**\\nhttp://172.20.20.160:9500/api/payment/bill99/ind_auth_verify\\n\\n**签约扣款验证/协议支付:**\\nhttp://172.20.20.160:9500/api/payment/bill99/purchase\\n\\n**查询交易流水:**\\nhttp://172.20.20.160:9500/api/payment/bill99/query_txn\\n\\n**卡信息查询:**\\nhttp://172.20.20.160:9500/api/payment/bill99/query_cardinfo\\n\\n**PCI数据查询:**\\nhttp://172.20.20.160:9500/api/payment/bill99/pci_query\\n\\n**PCI数据删除（解绑接口）:**\\nhttp://172.20.20.160:9500/api/payment/bill99/pci_del\\n\\n### 异常测试\\n#### 充值\\n| 充值金额(amount) | txn_status|response_code| response_text_message|备注|\\n| :--------: |: -------- :|:--------: |-------- |-------- |\\n| 123     | F     | 12     |充值失败     | 同步返回失败    |\\n| 120     | F     | 12     |充值失败     |  同步返回成功   |\\n| 223     | P     | C0     |交易请求处理中，稍后通知处理结果     |  同步返回失败   |\\n| 220     | P     | C0     |交易请求处理中，稍后通知处理结果     |  同步返回成功   |\\n| 323     | P     | 68     |无法在正常时间内获得交易应答，请稍后重试     |   同步返回失败  |\\n| 320     | P     | 68     |无法在正常时间内获得交易应答，请稍后重试     |    同步返回成功 |\\n| 423     | F    | 96     |系统异常、失效，请联系快钱     |   同步返回失败  |\\n| 420     | F     | 96     |系统异常、失效，请联系快钱     |   同步返回成功  |\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-02-27 17:04:31\", \"author\": \"彭鹏\"}', 1, '2019-2-27 09:40:05');
INSERT INTO `t_projects` VALUES (418, 'knowledge.book', '8a5cb738-449f-11e9-abab-0242ac120004', 193, '{\"title\": \"数据构造相关任务计划\", \"blog\": \"### 技术专项组数据构造相关任务安排\\n\\n| 序号 | 任务项 | 说明 |负责人|备注 |\\n| -------- | -------- | --------  | --------|\\n| 1     | 优享牛产品全流程数据     | 数据需求：<br>1、发布底层资产 <br>2、发布底层散标 <br>3、发布优享牛产品 <br>4、指定优享牛产品满标和计息<br>5、生成优享牛还款数据（可指定还款时间）    <br>功能需求：<br>1、可选择测试环境 <br>2、同时支持基于空库和满库的数据构造  <br>3、提供资产期限、封闭期、投资金额、利率、是否新手等常用测试类型选项 <br>4、可分阶段（发标、买标、满标、计息、还款）选择构造数据及全流程自动化构造数据 <br>5、基于dubbo接口构造<br>6、不用修改服务器时间 |窦献策|  2019年4月1日可投入使用，3月28、29日安排人员协助验收   |\\n| 2     | 产品组数据构造平台任务     | 1、按之前规划提供用户数据构造、绑卡实名充值接口及其他任务安排（按之前计划进行）<br> 2、优化构造方式，基于dubbo接口构造提高性能，较原http接口方式构造速度提升30% - 50%   |窦献策 |数据接口符合产品组要求<br> 2019年4月1日可投入使用，3月28、29日安排人员协助验收     |\\n| 3     | 自动化测试环境同步     | 1、自动化测试环境（20.24*）定期同步准生产应用包、数据库<br>2、实现一键同步并集成到综合测试平台管理平台中    |窦献策 | 2019年4月1日可投入使用，3月28、29日安排人员协助验收   |\\n\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-03-12 16:55:36\", \"author\": \"彭鹏\"}', 0, '2019-3-12 16:19:22');
INSERT INTO `t_projects` VALUES (419, 'knowledge.book', 'c7920322-462c-11e9-8460-0242ac120002', 189, '{\"title\": \"升财牛转让步骤及SQL\", \"blog\": \"-- 赎回表\\n\\nSELECT * FROM t_ransom o WHERE o.`ransomOrderId` = \\\\\'220010180331095426689458000001\\\\\';\\n\\n-- 用户债权表\\n\\nSELECT * FROM t_invest_item o WHERE o.`investOrderId` = \\\\\'454710180320102559701354000033\\\\\';\\n\\n-- 赎回转让关系表\\n\\nSELECT * FROM `t_ransom_transfer` o WHERE o.`ransomOrderId` = \\\\\'898210180602000038615670000004\\\\\';\\n\\n-- 债权转让表\\n\\nSELECT * FROM `t_transfer_credit` o WHERE o.`orderId` = \\\\\'713810180407001736522142000015\\\\\';\\n\\n-- 补息费用\\n\\nSELECT * FROM `t_invest_compensate_interest`;\", \"uid\": 54, \"type\": \"md\", \"updateTime\": \"2019-05-15 15:33:41\", \"author\": \"彭扬\"}', 1, '2019-3-14 15:42:55');
INSERT INTO `t_projects` VALUES (420, 'knowledge.book', 'aa93e17e-46c1-11e9-8528-0242ac120004', 187, '{\"title\": \"测试数据平台应用指南（基于Dubbo接口版本）\", \"blog\": \"### 1. 业务需求\\n× 支持优享牛产品全流程数据\\n```\\n数据需求：\\n1、发布底层资产 \\n2、发布底层标的\\n3、发布优享牛产品 \\n4、指定优享牛产品满标和计息\\n5、生成优享牛还款数据（可指定还款时间） \\n功能需求：\\n1、可选择测试环境 \\n2、同时支持基于空库和满库的数据构造 \\n3、提供资产期限、封闭期、投资金额、利率、是否新手等常用测试类型选项 \\n4、可分阶段（发标、买标、满标、计息、还款）选择构造数据及全流程自动化构造数据 \\n5、基于dubbo接口构造\\n6、不用修改服务器时间\\n\\n说明：提供界面操作，测试人员可以切换不同的环境，进行数据构造和测试。\\n```\\n× 确认验收：0328\\\\0329试用，收集下一步优化建议\\n× 交付时间：首个试用版本0331前完成交付\\n### 2. 技术架构\\n#### 2.1 技术栈\\nApiGate：go/beego\\nWebUI:  dva/antd/react\\n数据存储：Mongodb\\n#### 2.2 关键技术\\nA. dubbo接口调用采用telnet方式，从根本上解决部署依赖和版本依赖。\\nB. 直接调用开发业务Dubbo接口，有效降低Web录制回放模式的链路太长的问题。\\nC. 集成SwaggerUI，API接口更智能，方便调试。\\n#### 2.3 数据流\\n\\n### 3. 对外接口\\nAPI部署：http://172.20.20.160:8096  \\n【备注】复用原有持续改进的Web应用(归档、下线处理)\\n#### 3.1 产品组数据构造Restful接口\\n#### 3.2 平台内部全量Restful接口\", \"uid\": 47, \"type\": \"md\", \"updateTime\": \"2019-03-15 09:53:01\", \"author\": \"窦献策\"}', 1, '2019-3-15 09:28:41');
INSERT INTO `t_projects` VALUES (421, 'knowledge.book', '83be3688-5523-11e9-9218-0242ac120005', 189, '{\"title\": \"安稳投让利开关设置\", \"blog\": \"1.增加白名单脚本：\\nUSE cms;\\nINSERT INTO `t_white_config` (TYPE,STATUS,CODE,createTime,remark) VALUES (1,1, \\\\\'AWT_TRANSFER\\\\\', NOW(), \\\\\'安稳投转让黑名单\\\\\');\\nINSERT INTO `t_config_switch` (TYPE,STATUS,CODE,createDate,updateUser) VALUES (0,1, \\\\\'AWT_TRANSFER\\\\\', NOW(), \\\\\'初始化导入\\\\\');\\nINSERT INTO `cms`.`t_white_list` (`id`, `userId`, `code`, `level`, `createTime`) VALUES (1, 12720, \\\\\'AWT_TRANSFER\\\\\', NULL, now());\\nCOMMIT;\\n\\n2.https://www.xiaoniu88.com/cms/admin/pages/configSwitch.html   打开 配置模式>业务开关>点击打开\\n\\n让利接口：invoke com.neo.xnol.pcts.transfer.facade.InvestTransferFacade.applyTransfer({\\\\\\\"userId\\\\\\\":6064110,\\\\\\\"investId\\\\\\\":34,\\\\\\\"amount\\\\\\\":14000})\", \"uid\": 54, \"type\": \"md\", \"updateTime\": \"2019-04-02 16:46:10\", \"author\": \"张用辉\"}', 1, '2019-4-2 16:44:23');
INSERT INTO `t_projects` VALUES (119802, 'knowledge.book', '556c9fbc-5c22-11e9-9de8-0242ac120005', 215, '{\"title\": \"JaCoCo报告展示及覆盖率统计操作说明\", \"blog\": \"### 概览列表\\n![file](/static/media/files/28/0d4ee25a-5c20-11e9-9093-0242ac120003.png?v=3fa066ef9ea77c2ac5bae689b421ce37)\\n> 在JaCoCo覆盖率报告列表中会展示Line，Branch，Method，Class四个维度的总体覆盖率情况。\\n\\n### 报告详情页\\n![file](/static/media/files/28/b6c2731a-5c20-11e9-9093-0242ac120003.png?v=c949b2c1914c3c8b05e50416be9d2fde)\\n> 点击详情可进入报告详情页面，功能区说明如图所示。\\n\\n### 统计指定类型覆盖率\\n![file](/static/media/files/28/29028820-5c21-11e9-9093-0242ac120003.png?v=d2e7cb33b56a2e84b6e291cd30c8eb2f)\\n> 可通过搜索统计指定的package，class，method等数据\\n\\n![file](/static/media/files/28/38e8bf48-5c21-11e9-9093-0242ac120003.png?v=5c4b9a845e297963de0845dc8a2f917e)\\n\\n![file](/static/media/files/28/49d464b0-5c21-11e9-9de8-0242ac120005.png?v=0b1f7d2df39dd60afff43012a73f6360)\\n> 勾选需要统计的package统计整个package的所有数据\\n\\n![file](/static/media/files/28/a5d8a320-5c21-11e9-9de8-0242ac120005.png?v=931214202b8ebcc5509698d172ac251f)\\n> 可单独勾选需要统计的Class，统计所选Class的覆盖率\\n\\n![file](/static/media/files/28/c4a40128-5c21-11e9-9093-0242ac120003.png?v=fa9a6eaf3e83ae4a0bbe8d1ae71cc4a2)\\n> 也可单独勾选特定的method进行统计\\n\\n![file](/static/media/files/28/e3472a4c-5c21-11e9-9de8-0242ac120005.png?v=4617968beabb94ef7f155ba6048896f6)\\n> 勾选多个会累加所选项进行统计\\n\\n![file](/static/media/files/28/15775a00-5c22-11e9-9de8-0242ac120005.png?v=932556434c9c1b9af89e50ca8aee76e7)\\n![file](/static/media/files/28/0990c1fe-5c22-11e9-9de8-0242ac120005.png?v=ea55c3c91b9e490520bbfe6cf711d117)\\n> 双击左侧的树形结构节点，会跳转到原始报告页面，查看代码详细覆盖率数据，方便分析进行补充用例。\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-04-11 14:28:18\", \"author\": \"彭鹏\"}', 1, '2019-4-11 14:23:34');
INSERT INTO `t_projects` VALUES (120218, 'knowledge.book', '3263f470-6721-11e9-ae7b-0242ac120002', 186, '{\"title\": \"应用包版本发布通知接口\", \"blog\": \"**接口地址:** http://172.20.20.160:8090/api/py/tools/diff/deploy\\n\\n**请求方式:** POST\\n\\n**请求参数(JSON格式):**\\n\\n|参数|  说明|\\n|-|-|\\n|app | 应用包，必填，参数格式为数组，名称格式为：应用包:版本号，如：app-6041-pcts:1904251155|\\n|ip |部署环境ip地址|\\n\\n**请求Headers参数:**\\n\\n|参数 | 说明|\\n|-|-|\\n|Token  | 接口鉴权token, 必填, 可到测试平台个人中心 http://172.20.20.160:8090/account/settings/base 获取|\\n\\n**请求参数举例:**\\n\\n\\t{\\\"app\\\":[\\\"app-6041-pcts:1904251155\\\", \\\"app-6022-reporting:1904251344\\\"],\\\"ip\\\":\\\"172.20.20.245\\\"}\\n\\n**响应返回举例:**\\n\\n    {\\\"status\\\": \\\"SUCCESS\\\", \\\"message\\\": \\\"\\\", \\\"data\\\": \\\"\\\"}\\n\\n\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-04-25 14:16:15\", \"author\": \"彭鹏\"}', 1, '2019-4-25 14:13:08');
INSERT INTO `t_projects` VALUES (120219, 'knowledge.book', '2e904a86-6741-11e9-9b26-0242ac120002', 215, '{\"title\": \"应用包版本对比工具操作说明\", \"blog\": \"### 概览图\\n![file](/static/media/files/28/67551ace-673a-11e9-9b26-0242ac120002.png?v=1983351191580b203014215e6ab9a70c)\\n\\n### 注意事项\\n1. 当选择不同环境进行对比时，将对比所选应用包最近部署的版本在两个环境之间的差异。\\n\\n1. 当选择同一个环境进行对比时，需要选择应用包的版本，对比两个版本之间的差异。\\n\\n1. 当前仅对比APP应用包中 lib/xnol-应用名-app-版本号.jar 文件的差异，如有其他需求，请提供需要对比的jar包文件路径给专项组！\\n\\n### 操作步骤\\n#### 对比不同环境应用包差异\\n![file](/static/media/files/28/9ecf86c8-673b-11e9-9b26-0242ac120002.png?v=6c27a58bbc6dab43bfd2ec40b931a3f0)\\n\\n> 1. 选择测试环境\\n> \\n> 3. 选择参考环境\\n> \\n> 5. 选择应用包\\n> \\n> 7. 点击开始对比按钮\\n> \\n> 9. 稍等片刻，获得差异文件列表后，点击文件名可查看差异内容\\n> \\n> 11. 左边是测试环境的内容，右边是参考环境的内容\\n\\n#### 对比相同环境应用包差异\\n![file](/static/media/files/28/a0859ce2-673f-11e9-9b26-0242ac120002.png?v=207ba38ea880a4725703e4a7ee1840c5)\\n![file](/static/media/files/28/25984884-6741-11e9-b581-0242ac120006.png?v=374357396ccac585f7b8d75cccaa44f0)\\n> \\n> 1. 选择测试环境\\n> \\n> 3. 选择参考环境跟测试环境一样\\n> \\n> 5. 选择应用包\\n> \\n> 7. 选择测试环境应用包版本号\\n> \\n> 9. 选择参考环境应用包版本号\\n> \\n> 11. 点击开始对比按钮\\n> \\n> 13. 稍等片刻，获得差异文件列表后，点击文件名可查看差异内容\\n> \\n> 15.  左边是测试环境的内容，右边是参考环境的内容\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-04-26 09:16:28\", \"author\": \"彭鹏\"}', 1, '2019-4-25 18:02:06');
INSERT INTO `t_projects` VALUES (130023, 'knowledge.book', 'e2bf4624-709c-11e9-9d10-0242ac120006', 221, '{\"title\": \"互联网应急中心测试挡板列表\", \"blog\": \"### POST\\n1. 用户信息接口: http://172.20.20.160:9500/api/ifcert/userInfo/test\\n1. 散标信息接口: http://172.20.20.160:9500/api/ifcert/scatterInvest/test\\n1. 散标状态接口: http://172.20.20.160:9500/api/ifcert/status/test\\n1. 还款计划接口: http://172.20.20.160:9500/api/ifcert/repayPlan/test\\n1. 初始债权接口: http://172.20.20.160:9500/api/ifcert/creditor/test\\n1. 转让信息接口: http://172.20.20.160:9500/api/ifcert/transferProject/test\\n1. 转让状态接口: http://172.20.20.160:9500/api/ifcert/transferStatus/test\\n1. 承接转让接口: http://172.20.20.160:9500/api/ifcert/underTake/test\\n1. 交易流水接口: http://172.20.20.160:9500/api/ifcert/transact/test\\n1. 产品信息接口: http://172.20.20.160:9500/api/ifcert/lendProduct/test\\n1.  产品配置接口: http://172.20.20.160:9500/api/ifcert/lendProductConfig/test\\n1. 投资明细接口: http://172.20.20.160:9500/api/ifcert/lendParticulars/test\\n\\n### GET\\n1. 批次异步消息接口: http://172.20.20.160:9500/api/ifcert/batchMessage/test\\n1. 每天推送批次数接口: http://172.20.20.160:9500/api/ifcert/batchNum/test\\n1. 推送批次列表接口: http://172.20.20.160:9500/api/ifcert/batchList/test\\n\\n### 异常测试开关\\n 测试前请求链接: http://172.20.20.160:9500/api/ifcert/batchMessage/test?retStatus=failed\\n \\n> retStatus=failed 表示全部返回失败\\n> \\n> retStatus=success 表示全部返回成功\\n\\n其他状态说明：\\n>success：为入库成功；\\n>\\n>hold：为等待处理，网贷机构需要隔段时间调用该接口；\\n>\\n>failed：为入库失败，网贷机构需要将该批次号下面的数据重新报送，批次号可以和原来的一样；\\n>\\n>isNot：为批次号无效；\\n\\n### 查询上报数据明细\\n 通过批次号查询上报数据明细，链接: http://172.20.20.160:9500/static/ifcert/ + 批次号.json\\n \\n 如:  http://172.20.20.160:9500/static/ifcert/CERT20190412018_201905281_1472.json\", \"uid\": 28, \"type\": \"md\", \"updateTime\": \"2019-05-28 13:55:50\", \"author\": \"彭鹏\"}', 1, '2019-5-7 15:51:13');
INSERT INTO `t_projects` VALUES (135885, 'knowledge.book', '4a0e9546-85b0-11e9-90ae-0242ac120005', 189, '{\"title\": \"BE修改登录密码脚本\", \"blog\": \"update xnbe.t_user set PASSWORD=\\\\\'$shiro1$SHA1$5$$xWbHqVfEru7ak+EyYV2Ek2J++2w=\\\\\' where USER_NAME=\\\\\'admin\\\\\';\\n\\n修改为a1234567\", \"uid\": 54, \"type\": \"md\", \"updateTime\": \"2019-06-03 11:33:01\", \"author\": \"张用辉\"}', 1, '2019-6-3 11:33:01');
